{"version":3,"sources":["styles/colors.ts","styles/helpers/color.ts","components/input/index.tsx","components/button/index.tsx","components/settings-form/index.tsx","enums/settings.ts","components/dropdown-select/index.tsx","components/radio-button/index.tsx","components/advanced-settings-form/index.tsx","libs/agora-rtc-sdk.ts","libs/react-toastify.ts","components/player/index.tsx","types/peer-av-event.ts","hooks/use-user-media.ts","utils/transform-media-device-info-to-option.ts","types/stream.ts","actions/stream.ts","hooks/use-agora-client-events.ts","hooks/use-switch-device.ts","styles/breakpoints.ts","styles/helpers/breakpoint.ts","components/app/index.tsx","hocs/with-player.tsx","hooks/use-change-resolution.ts","hooks/use-agora-stream-events.ts","components/global-style/index.tsx","utils/stream.ts","reducers/stream.ts","reducers/index.ts","reportWebVitals.ts","index.tsx","create-store.ts"],"names":["colors","primary","white","black","disabled","charcoal","silver","timberwolf","colorFn","color","props","theme","Color","Object","keys","reduce","acc","name","Input","styled","input","Btn","button","css","Icon","loading","rest","undefined","Button","children","innerRef","ref","icon","faSpinner","spin","Mode","Codec","Resolution","Card","div","noop","Settings","appId","channel","token","isJoined","isPublished","updateSettings","join","leave","publish","unpublish","onChange","e","target","value","htmlFor","placeholder","id","aria-label","className","onClick","StyledSelect","Select","FontAwesomeIcon","DropdownSelect","options","selectedOption","clearOnBlur","searchable","values","dropdownHandleRenderer","state","dropdown","faCaretUp","faCaretDown","InlineBlock","RadioButton","label","checked","type","cameraResolutionOptions","DEFAULT","_720P","_1080P","uid","camera","mode","codec","cameraOptions","microphone","microphoneOptions","cameraResolution","isPlaying","onChangeSelect","length","find","option","RTC","LIVE","VP8","H264","enhancedAgoraRTC","enhanceAgoraRTC","AgoraRTC","errToast","mgs","originalToast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toast","PeerAVEventType","Container","$width","StreamPlayer","SP","$height","Player","stream","width","height","isAudioMuted","isVideoMuted","onCameraClick","onMicrophoneClick","test","data-testid","faMicrophoneSlash","faMicrophone","faVideoSlash","faVideo","noTransform","d","tempClient","createClient","info","deviceId","kind","UPDATE_LOCAL_STREAM","UPDATE_REMOTE_STREAMS","CLEAR_ALL_STREAMS","updateLocalStream","payload","muteAudioById","MuteAudio","unmuteAudioById","UnmuteAudio","muteVideoById","MuteVideo","unmuteVideoById","UnmuteVideo","client","dispatch","useDispatch","setRemoteStreams","func","updateRemoteStreams","removeRemoteStreamByUid","list","index","findIndex","s","getId","newList","stop","splice","useEffect","on","addLocalStream","remoteStreamSub","addRemoteStreams","peerLeave","removeRemoteStream","peerUnmuteAudio","peerMuteAudio","peerUnMuteVideo","peerMuteVideo","off","event","concat","a","subscribe","video","audio","reason","err","console","log","pfSwitchDevice","Promise","resolve","reject","switchDevice","args","breakpoints","xs","sm","md","lg","xl","friction","MediaBreakpoint","up","breakpoint","vertical","Error","down","indexOf","between","breakpointMin","breakpointMax","minValue","maxValue","MB","method","size","maxSizeOrVertical","breakpointFn","ConnectedPlayer","WrappedComponent","useSelector","map","unmuteVideo","muteVideo","unmuteAudio","muteAudio","setTimeout","WithPlayer","Page","Content","Row","BSRow","$reverse","Toast","ToastContainer","initialSettings","App","useState","settings","setSettings","setIsJoined","setIsPublished","setClient","localStream","local","remoteStreams","remote","useAgoraClientEvents","transform","cameras","setCameras","microphones","setMicrophones","onCameraChange","onRecordingDeviceChange","getCameras","message","getRecordingDevices","filter","item","useUserMedia","transformMediaDeviceInfo2Option","m","prevCamera","usePrevious","prevMicrophone","getAudioTrack","getVideoTrack","useSwitchDevice","resolution","prevResolution","setVideoProfile","useChangeResolution","evt","useAgoraStreamEvents","updatedSettings","fluid","Col","offset","span","text","init","Number","isNaN","streamID","createStream","screen","cameraId","microphoneId","close","newestOnTop","rtl","createGlobalStyle","muted","initialState","normalize","rootReducer","combineReducers","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","middlewares","thunk","enhancers","applyMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfba34d0.chunk.js","sourcesContent":["const colors = {\n  primary: '#2020e5',\n  white: '#FFFFFF',\n  black: '#000000',\n  disabled: '#c6cbd4',\n  'dim-gray': '#6b6b6b',\n  'tiffany-blue': '#06b5b3',\n  charcoal: '#313d47',\n  silver: '#bdbdbd',\n  'dark-gray': '#a4a9ac',\n  timberwolf: '#d8d8d8',\n  'page-gray': '#fafafa',\n};\n\nexport default colors;\nexport type ColorsType = typeof colors;\n","import { StyledProps } from 'styled-components';\nimport { rgba as polishedRGBA } from 'polished';\nimport colors, { ColorsType } from 'styles/colors';\n\ntype ColorName = keyof ColorsType;\n\nconst colorFn = (color: ColorName) => <P>(props: StyledProps<P>): string =>\n  props.theme.colors[color];\n\nexport const rgba = (color: ColorName, alpha: number) => <P>(\n  props: StyledProps<P>,\n): string => {\n  const themeColor = colorFn(color)(props);\n  return polishedRGBA(themeColor, alpha);\n};\n\nexport const Color = Object.keys(colors).reduce((acc, name) => {\n  acc[name as ColorName] = colorFn(name as ColorName);\n  return acc;\n}, {} as { [P in keyof ColorsType]: <T>(props: StyledProps<T>) => ColorsType[P] });\n","import styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\n\nconst Input = styled.input`\n  width: 100%;\n  color: ${Color.charcoal};\n  border-radius: 4px;\n  border: 1px solid ${Color['dark-gray']};\n  padding: 14px 12px;\n  background: ${Color.white};\n  &::placeholder {\n    color: ${Color.silver};\n  }\n`;\n\nexport default Input;\n","import React, { FC, RefObject } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nexport type Props = RTW.Button<{\n  loading?: boolean;\n  primary?: boolean;\n  innerRef?: RefObject<HTMLButtonElement>;\n}>;\n\nconst Btn = styled.button<{ primary?: boolean }>`\n  &,\n  &:focus {\n    outline: none;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  padding: 0;\n  ${(props) =>\n    props.primary\n      ? css`\n          border: 1px solid ${Color.primary};\n          background-color: ${Color.primary};\n          color: ${Color.white};\n        `\n      : css`\n          border: 1px solid ${Color['dim-gray']};\n          background-color: ${Color.white};\n          color: ${Color['dim-gray']};\n        `}\n  font-weight: 500;\n  &:disabled {\n    cursor: not-allowed;\n    background-color: ${Color.disabled};\n    background-image: none;\n    border: 1px solid ${Color.disabled};\n    color: ${Color.white};\n  }\n`;\n\nconst Icon = styled(({ loading, ...rest }) => <FontAwesomeIcon {...rest} />)<{\n  loading?: boolean;\n}>`\n  && {\n    transition: width 0.5s, margin-right 0.5s;\n    width: ${(props) => (props.loading ? undefined : '0')};\n    margin-right: ${(props) => (props.loading ? '4px' : '0')};\n    ${(props) =>\n      props.loading === false &&\n      css`\n        path {\n          display: none;\n        }\n      `}\n  }\n`;\n\nconst Button: FC<Props> = ({\n  children,\n  loading = false,\n  disabled,\n  innerRef,\n  primary = false,\n  ...rest\n}) => {\n  return (\n    <Btn\n      {...rest}\n      ref={innerRef}\n      disabled={loading || disabled}\n      primary={primary}\n    >\n      <Icon icon={faSpinner} spin={loading} loading={loading} /> {children}\n    </Btn>\n  );\n};\n\nexport default Button;\n","import React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport Input from 'components/input';\nimport { BasicSettings } from 'types/setting';\nimport Btn from 'components/button';\n\ntype Props = BasicSettings & {\n  isJoined: boolean;\n  isPublished: boolean;\n  updateSettings: (updatedSettings: Partial<BasicSettings>) => void;\n  join?: () => void;\n  leave?: () => void;\n  publish?: () => void;\n  unpublish?: () => void;\n};\n\nconst Card = styled.div`\n  width: 100%;\n  padding: 24px;\n  background-color: ${Color.white};\n  border: 1px solid ${Color.timberwolf};\n  border-radius: 4px;\n  box-shadow: 0px 1px 1px 0px ${Color.timberwolf};\n  > label {\n    font-size: 0.75rem;\n    color: ${Color.silver};\n  }\n  > input {\n    margin: 0 0 8px;\n  }\n  .action-panel {\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\n\nconst Button = styled(Btn)`\n  padding: 12px 16px;\n  margin: 4px;\n  border-radius: 2px;\n  font-size: 0.85rem;\n`;\n\nconst noop = () => {};\n\nconst Settings: FC<RTW.Div<Props>> = ({\n  appId,\n  channel,\n  token,\n  isJoined,\n  isPublished,\n  updateSettings,\n  join = noop,\n  leave = noop,\n  publish = noop,\n  unpublish = noop,\n  ...rest\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    updateSettings({ [e.target.name]: e.target.value });\n  return (\n    <Card {...rest}>\n      <label htmlFor=\"appId\">App ID</label>\n      <Input\n        placeholder=\"App ID\"\n        value={appId}\n        name=\"appId\"\n        id=\"appId\"\n        aria-label=\"appId\"\n        onChange={onChange}\n      />\n      <label htmlFor=\"channel\">Channel</label>\n      <Input\n        placeholder=\"channel\"\n        value={channel}\n        name=\"channel\"\n        id=\"channel\"\n        aria-label=\"channel\"\n        onChange={onChange}\n      />\n      <label htmlFor=\"token\">Token</label>\n      <Input\n        placeholder=\"token\"\n        value={token}\n        name=\"token\"\n        id=\"token\"\n        aria-label=\"token\"\n        onChange={onChange}\n      />\n      <div className=\"action-panel\">\n        <Button disabled={isJoined} primary onClick={join}>\n          JOIN\n        </Button>\n        <Button disabled={!isJoined} primary onClick={leave}>\n          LEAVE\n        </Button>\n        <Button disabled={!isJoined || isPublished} primary onClick={publish}>\n          PUBLISH\n        </Button>\n        <Button disabled={!isPublished} primary onClick={unpublish}>\n          UNPUBLISH\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Settings;\n","export enum Mode {\n  LIVE = 'live',\n  RTC = 'rtc',\n}\n\nexport enum Codec {\n  H264 = 'h264',\n  VP8 = 'vp8',\n}\n\nexport enum Resolution {\n  DEFAULT = '480p_1',\n  _720P = '720p_1',\n  _1080P = '1080p_1',\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Select, { SelectProps } from 'react-dropdown-select';\nimport { Color } from 'styles/helpers/color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\ntype Props<T> = Omit<SelectProps<T>, 'values'> & { selectedOption?: T };\n\nconst StyledSelect = styled(Select)`\n  && {\n    font-size: 16px;\n    color: ${Color.charcoal};\n    border-radius: 4px;\n    border: 1px solid ${Color['dark-gray']};\n    padding: 14px 12px;\n    background: ${Color.white};\n    &:hover {\n      border: 1px solid ${Color['dark-gray']};\n    }\n    &:focus,\n    &:focus-within {\n      box-shadow: none;\n      outline: none;\n      border: 1px solid ${Color['dark-gray']};\n    }\n    .react-dropdown-select-dropdown {\n      border-radius: 4px;\n      padding: 4px 0;\n    }\n    .react-dropdown-select-content span {\n      display: flex;\n      align-items: center;\n    }\n    .react-dropdown-select-content input {\n      color: ${Color.charcoal};\n      width: 0;\n      font-size: 16px;\n      &::placeholder {\n        color: ${Color.silver};\n      }\n    }\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: ${Color['dim-gray']};\n  font-size: 18px;\n`;\n\nconst DropdownSelect = <T extends string | object = {}>({\n  options,\n  selectedOption,\n  placeholder,\n  name,\n  onChange,\n  className,\n}: Props<T>): JSX.Element => {\n  return (\n    <StyledSelect\n      clearOnBlur\n      className={className}\n      searchable={false}\n      options={options}\n      values={selectedOption ? [selectedOption] : []}\n      placeholder={placeholder}\n      color=\"#2020e5\"\n      name={name}\n      dropdownHandleRenderer={({ state }) => {\n        return state.dropdown ? (\n          <Icon icon={faCaretUp} />\n        ) : (\n          <Icon icon={faCaretDown} />\n        );\n      }}\n      onChange={onChange as (value: (string | object)[]) => void}\n    />\n  );\n};\n\nexport default DropdownSelect;\n","import React, { FC, ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  label: string;\n  name: string;\n  value: string;\n  checked: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n};\n\nconst InlineBlock = styled.div`\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  * {\n    cursor: pointer;\n  }\n`;\n\nconst Input = styled.input`\n  margin-right: 8px;\n`;\n\nconst RadioButton: FC<Props> = ({\n  label,\n  value,\n  name,\n  checked,\n  onChange = () => {},\n  className,\n}) => {\n  return (\n    <InlineBlock className={className}>\n      <Input\n        value={value}\n        type=\"radio\"\n        name={name}\n        onChange={onChange}\n        checked={checked}\n        aria-label={label}\n      />\n      <label htmlFor={name}>{label}</label>\n    </InlineBlock>\n  );\n};\n\nexport default RadioButton;\n","import React, { FC, ChangeEvent } from 'react';\nimport { Mode, Codec, Resolution } from 'enums/settings';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport Input from 'components/input';\nimport Select from 'components/dropdown-select';\nimport RadioButton from 'components/radio-button';\nimport { AdvancedSettings } from 'types/setting';\n\nconst Card = styled.div`\n  width: 100%;\n  padding: 24px;\n  background-color: ${Color.white};\n  border: 1px solid ${Color.timberwolf};\n  border-radius: 4px;\n  box-shadow: 0px 1px 1px 0px ${Color.timberwolf};\n  > label {\n    font-size: 0.75rem;\n    color: ${Color.silver};\n  }\n  > input,\n  .select {\n    margin: 0 0 8px;\n  }\n  .radio-buttons {\n    margin-bottom: 16px;\n    > div {\n      margin-right: 8px;\n    }\n  }\n`;\n\ntype Option = {\n  value: string;\n  label: string;\n};\n\ntype Props = AdvancedSettings & {\n  cameraOptions: Option[];\n  microphoneOptions: Option[];\n  isPlaying?: boolean;\n  updateSettings: (updatedSettings: Partial<AdvancedSettings>) => void;\n};\n\nconst cameraResolutionOptions = [\n  {\n    label: 'default',\n    value: Resolution.DEFAULT,\n  },\n  {\n    label: '720p',\n    value: Resolution._720P,\n  },\n  {\n    label: '1080p',\n    value: Resolution._1080P,\n  },\n];\n\nconst Settings: FC<RTW.Div<Props>> = ({\n  uid,\n  camera,\n  mode,\n  codec,\n  cameraOptions,\n  microphone,\n  microphoneOptions,\n  cameraResolution,\n  isPlaying = false,\n  updateSettings,\n  ...rest\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    updateSettings({ [e.target.name]: e.target.value });\n  const onChangeSelect = (name: string) => (options: Option[]) =>\n    updateSettings({ [name]: options[0].value });\n  return (\n    <Card {...rest}>\n      <h3>ADVANCED SETTINGS</h3>\n      {isPlaying === false && (\n        <>\n          <label htmlFor=\"uid\">UID</label>\n          <Input\n            value={uid}\n            name=\"uid\"\n            id=\"uid\"\n            aria-label=\"uid\"\n            onChange={onChange}\n            placeholder=\"uid\"\n          />\n        </>\n      )}\n      {cameraOptions?.length > 0 && (\n        <>\n          <label>CAMERA</label>\n          <Select\n            placeholder=\"camera\"\n            className=\"select\"\n            options={cameraOptions}\n            onChange={onChangeSelect('camera')}\n            selectedOption={cameraOptions.find(\n              (option) => option.value === camera,\n            )}\n          />\n        </>\n      )}\n      {microphoneOptions?.length > 0 && (\n        <>\n          <label>MICROPHONE</label>\n          <Select\n            placeholder=\"microphone\"\n            className=\"select\"\n            options={microphoneOptions}\n            onChange={onChangeSelect('microphone')}\n            selectedOption={microphoneOptions.find(\n              (option) => option.value === microphone,\n            )}\n          />\n        </>\n      )}\n      <label>CAMERA RESOLUTION</label>\n      <Select\n        placeholder=\"camera resolution\"\n        className=\"select\"\n        options={cameraResolutionOptions}\n        onChange={onChangeSelect('cameraResolution')}\n        selectedOption={cameraResolutionOptions.find(\n          (option) => option.value === cameraResolution,\n        )}\n      />\n      {isPlaying === false && (\n        <>\n          <label>Mode</label>\n          <div className=\"radio-buttons\">\n            <RadioButton\n              label=\"rtc\"\n              value={Mode.RTC}\n              name=\"mode\"\n              checked={Mode.RTC === mode}\n              onChange={onChange}\n            />\n            <RadioButton\n              label=\"live\"\n              value={Mode.LIVE}\n              name=\"mode\"\n              checked={Mode.LIVE === mode}\n              onChange={onChange}\n            />\n          </div>\n          <label>CODEC</label>\n          <div className=\"radio-buttons\">\n            <RadioButton\n              label=\"vp8\"\n              value={Codec.VP8}\n              name=\"codec\"\n              checked={Codec.VP8 === codec}\n              onChange={onChange}\n            />\n            <RadioButton\n              label=\"h264\"\n              value={Codec.H264}\n              name=\"codec\"\n              checked={Codec.H264 === codec}\n              onChange={onChange}\n            />\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Settings;\n","import AgoraRTC from 'agora-rtc-sdk';\nimport enhanceAgoraRTC from 'agoran-awe';\n\nconst enhancedAgoraRTC = enhanceAgoraRTC(AgoraRTC);\nexport type Stream = AgoraRTC.Stream;\nexport type Client = AgoraRTC.Client;\nexport default enhancedAgoraRTC;\nexport type IClientWithPromise = ReturnType<\n  typeof enhancedAgoraRTC.createClient\n>;\nexport type IStreamWithPromise = ReturnType<\n  typeof enhancedAgoraRTC.createStream\n>;\n","import { toast as originalToast, ToastOptions } from 'react-toastify';\n\nexport * from 'react-toastify';\nexport const errToast = (mgs: string, options?: ToastOptions) => {\n  originalToast.error(mgs, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    ...options,\n  });\n};\n\nexport const toast = (mgs: string, options?: ToastOptions) => {\n  originalToast(mgs, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    ...options,\n  });\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport SP from 'agora-stream-player';\nimport { Stream } from 'types/stream';\nimport Btn from 'components/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideo,\n  faVideoSlash,\n} from '@fortawesome/free-solid-svg-icons';\n\ntype Props = {\n  stream: Stream;\n  label?: string;\n  width?: string | number;\n  height?: string | number;\n  isAudioMuted?: boolean;\n  isVideoMuted?: boolean;\n  onCameraClick?: () => void;\n  onMicrophoneClick?: () => void;\n};\n\nconst Container = styled.div<{ $width?: string }>`\n  width: ${(props) => props.$width ?? '240px'};\n  .actions {\n    margin-top: 8px;\n    display: flex;\n    justify-content: center;\n    button:first-child {\n      margin-right: 8px;\n    }\n    button:last-child {\n      margin-left: 8px;\n    }\n  }\n`;\n\nconst StreamPlayer = styled(SP)<{ $width?: string; $height?: string }>`\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n`;\n\nconst Button = styled(Btn)`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n`;\n\nconst Player: FC<Props> = ({\n  stream,\n  label,\n  width,\n  height,\n  isAudioMuted,\n  isVideoMuted,\n  onCameraClick,\n  onMicrophoneClick,\n  ...rest\n}) => {\n  if (typeof width === 'number') {\n    width = `${width}`;\n  }\n  if (typeof height === 'number') {\n    height = `${height}`;\n  }\n  if (width && !/(px|%)$/.test(width)) {\n    width = `${width}px`;\n  }\n  if (height && !/(px|%)$/.test(height)) {\n    height = `${height}px`;\n  }\n\n  return (\n    <Container $width={width} {...rest}>\n      <StreamPlayer\n        stream={stream}\n        label={label}\n        $width={width}\n        $height={height}\n      />\n      <div className=\"actions\">\n        <Button onClick={onMicrophoneClick} data-testid=\"microphone-button\">\n          <FontAwesomeIcon\n            data-testid={isAudioMuted ? 'audio-muted' : 'audio-unmuted'}\n            icon={isAudioMuted ? faMicrophoneSlash : faMicrophone}\n          />\n        </Button>\n        <Button onClick={onCameraClick} data-testid=\"camera-button\">\n          <FontAwesomeIcon\n            data-testid={isVideoMuted ? 'video-muted' : 'video-unmuted'}\n            icon={isVideoMuted ? faVideoSlash : faVideo}\n          />\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Player;\n","import { ReactText } from 'react';\n\nexport enum PeerAVEventType {\n  UnmuteAudio = 'unmute-audio',\n  MuteAudio = 'mute-audio',\n  UnmuteVideo = 'unmute-video',\n  MuteVideo = 'mute-video',\n}\n\nexport type PeerAVEvent = {\n  uid: ReactText;\n  type: PeerAVEventType;\n};\n","import { useState, useEffect } from 'react';\nimport AgoraRTC, { IClientWithPromise } from 'libs/agora-rtc-sdk';\n\nconst noTransform = (d: any) => d;\nconst tempClient = AgoraRTC.createClient({\n  mode: 'live',\n  codec: 'vp8',\n});\n\nexport default (\n  client: IClientWithPromise | null,\n  transform?: (d: MediaDeviceInfo) => any,\n) => {\n  client = client ?? tempClient;\n  transform = transform ?? noTransform;\n  const [cameras, setCameras] = useState<MediaDeviceInfo[]>([]);\n  const [microphones, setMicrophones] = useState<MediaDeviceInfo[]>([]);\n  useEffect(() => {\n    if (!client) return;\n    async function onCameraChange() {\n      if (!client) return;\n      console.log('onCameraChange');\n      try {\n        const cameras = await client.getCameras();\n        if (cameras.length) {\n          setCameras(cameras);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setCameras([]);\n      }\n    }\n    async function onRecordingDeviceChange() {\n      if (!client) return;\n      console.log('onRecordingDeviceChange');\n      try {\n        const microphones = await client.getRecordingDevices();\n        if (microphones.length) {\n          setMicrophones(microphones);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setMicrophones([]);\n      }\n    }\n    client.on('camera-changed', onCameraChange);\n    client.on('recording-device-changed', onRecordingDeviceChange);\n    onCameraChange();\n    onRecordingDeviceChange();\n    return () => {\n      client?.off('camera-changed', onCameraChange);\n      client?.off('recording-device-changed', onRecordingDeviceChange);\n    };\n  }, [client]);\n  return {\n    cameras: cameras.filter((item) => !!item.deviceId).map(transform),\n    microphones: microphones.filter((item) => !!item.deviceId).map(transform),\n  };\n};\n","export default (info: MediaDeviceInfo) => {\n  const { deviceId, kind, label } = info;\n  return {\n    kind,\n    label,\n    value: deviceId,\n  };\n};\n","import type { Stream } from 'libs/agora-rtc-sdk';\nimport { PeerAVEventType, PeerAVEvent } from 'types/peer-av-event';\n\nexport type { Stream };\n\nexport const UPDATE_LOCAL_STREAM = 'UPDATE_LOCAL_STREAM';\nexport const UPDATE_REMOTE_STREAMS = 'UPDATE_REMOTE_STREAMS';\nexport const CLEAR_ALL_STREAMS = 'CLEAR_ALL_STREAMS';\n\nexport type UpdateLocalStreamAction = {\n  type: typeof UPDATE_LOCAL_STREAM;\n  payload: Stream | null;\n};\n\nexport type UpdateRemoteStreamsAction = {\n  type: typeof UPDATE_REMOTE_STREAMS;\n  payload: (list: Stream[]) => Stream[];\n};\n\nexport type ClearAllStreamsAction = {\n  type: typeof CLEAR_ALL_STREAMS;\n};\n\nexport type MuteAudioByIdAction = {\n  type: PeerAVEventType.MuteAudio;\n  payload: PeerAVEvent;\n};\n\nexport type UnmuteAudioByIdAction = {\n  type: PeerAVEventType.UnmuteAudio;\n  payload: PeerAVEvent;\n};\n\nexport type MuteVideoByIdAction = {\n  type: PeerAVEventType.MuteVideo;\n  payload: PeerAVEvent;\n};\n\nexport type UnmuteVideoByIdAction = {\n  type: PeerAVEventType.UnmuteVideo;\n  payload: PeerAVEvent;\n};\n\nexport type StreamActionTypes =\n  | UpdateLocalStreamAction\n  | UpdateRemoteStreamsAction\n  | ClearAllStreamsAction\n  | MuteAudioByIdAction\n  | UnmuteAudioByIdAction\n  | MuteVideoByIdAction\n  | UnmuteVideoByIdAction;\n","import {\n  Stream,\n  UPDATE_LOCAL_STREAM,\n  UPDATE_REMOTE_STREAMS,\n  CLEAR_ALL_STREAMS,\n  UpdateLocalStreamAction,\n  UpdateRemoteStreamsAction,\n  ClearAllStreamsAction,\n  MuteAudioByIdAction,\n  UnmuteAudioByIdAction,\n  MuteVideoByIdAction,\n  UnmuteVideoByIdAction,\n} from 'types/stream';\nimport { PeerAVEvent, PeerAVEventType } from 'types/peer-av-event';\n\nexport const updateLocalStream = (\n  stream: Stream | null,\n): UpdateLocalStreamAction => {\n  return {\n    type: UPDATE_LOCAL_STREAM,\n    payload: stream,\n  };\n};\n\nexport const updateRemoteStreams = (\n  func: (list: Stream[]) => Stream[],\n): UpdateRemoteStreamsAction => {\n  return {\n    type: UPDATE_REMOTE_STREAMS,\n    payload: func,\n  };\n};\n\nexport const muteAudioById = <T extends PeerAVEvent>(\n  e: T,\n): MuteAudioByIdAction => {\n  return {\n    type: PeerAVEventType.MuteAudio,\n    payload: e,\n  };\n};\n\nexport const unmuteAudioById = <T extends PeerAVEvent>(\n  e: T,\n): UnmuteAudioByIdAction => {\n  return {\n    type: PeerAVEventType.UnmuteAudio,\n    payload: e,\n  };\n};\n\nexport const muteVideoById = <T extends PeerAVEvent>(\n  e: T,\n): MuteVideoByIdAction => {\n  return {\n    type: PeerAVEventType.MuteVideo,\n    payload: e,\n  };\n};\n\nexport const unmuteVideoById = <T extends PeerAVEvent>(\n  e: T,\n): UnmuteVideoByIdAction => {\n  return {\n    type: PeerAVEventType.UnmuteVideo,\n    payload: e,\n  };\n};\n\nexport const clearAllStreams = (): ClearAllStreamsAction => ({\n  type: CLEAR_ALL_STREAMS,\n});\n","import { useEffect } from 'react';\nimport { Stream } from 'types/stream';\nimport { IClientWithPromise } from 'libs/agora-rtc-sdk';\nimport { errToast, toast } from 'libs/react-toastify';\nimport { PeerAVEvent } from 'types/peer-av-event';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateLocalStream,\n  updateRemoteStreams,\n  clearAllStreams,\n  muteAudioById,\n  unmuteAudioById,\n  muteVideoById,\n  unmuteVideoById,\n} from 'actions/stream';\n\nexport default (client: IClientWithPromise | null) => {\n  const dispatch = useDispatch();\n  const setLocalStream = (s: Stream | null) => dispatch(updateLocalStream(s));\n  const setRemoteStreams = (func: (list: Stream[]) => Stream[]) =>\n    dispatch(updateRemoteStreams(func));\n  const removeRemoteStreamByUid = (uid: string | number) => {\n    const func = (list: Stream[]) => {\n      const index = list.findIndex((s) => `${s.getId()}` === `${uid}`);\n      const newList = [...list];\n      if (index !== -1) {\n        list[index].isPlaying() && list[index].stop();\n        newList.splice(index, 1);\n      }\n      return newList;\n    };\n    setRemoteStreams(func);\n  };\n  useEffect(() => {\n    if (!client) {\n      dispatch(clearAllStreams());\n      return;\n    }\n    function addLocalStream(event: { stream: Stream }) {\n      const { stream } = event;\n      toast('local stream published');\n      setLocalStream(stream);\n    }\n    function addRemoteStreams(event: { stream: Stream }) {\n      const { stream } = event;\n      toast(`new stream added ${stream.getId()}`);\n      setRemoteStreams((list) => list?.concat(stream));\n    }\n    async function remoteStreamSub(event: { stream: Stream }) {\n      const { stream } = event;\n      await client?.subscribe(stream, {\n        video: true,\n        audio: true,\n      });\n      toast(`new stream subscribed ${stream.getId()}`);\n    }\n    function peerLeave(event: { uid: string; reason: string }) {\n      const { uid, reason } = event;\n      toast(`user ${uid} leave because of ${reason}`);\n      removeRemoteStreamByUid(uid);\n    }\n    function removeRemoteStream(event: { stream: Stream }) {\n      const { stream } = event;\n      const uid = stream.getId();\n      toast(`remote stream was removed ${uid}`);\n      removeRemoteStreamByUid(uid);\n    }\n    function error(err: { type: 'error'; reason: any }) {\n      console.error(err);\n      errToast(err.reason);\n    }\n    function peerUnmuteAudio(e: PeerAVEvent) {\n      console.log('peerUnmuteAudio', e);\n      dispatch(unmuteAudioById(e));\n    }\n    function peerMuteAudio(e: PeerAVEvent) {\n      console.log('peerMuteAudio', e);\n      dispatch(muteAudioById(e));\n    }\n    function peerUnMuteVideo(e: PeerAVEvent) {\n      console.log('peerUnMuteVideo', e);\n      dispatch(unmuteVideoById(e));\n    }\n    function peerMuteVideo(e: PeerAVEvent) {\n      console.log('peerMuteVideo', e);\n      dispatch(muteVideoById(e));\n    }\n    client.on('stream-published', addLocalStream);\n    client.on('stream-added', remoteStreamSub);\n    client.on('stream-subscribed', addRemoteStreams);\n    client.on('peer-leave', peerLeave);\n    client.on('stream-removed', removeRemoteStream);\n    client.on('unmute-audio', peerUnmuteAudio);\n    client.on('mute-audio', peerMuteAudio);\n    client.on('unmute-video', peerUnMuteVideo);\n    client.on('mute-video', peerMuteVideo);\n    client.on('error', error);\n    return () => {\n      client.off('stream-published', addLocalStream);\n      client.off('stream-added', remoteStreamSub);\n      client.off('stream-subscribed', addRemoteStreams);\n      client.off('peer-leave', peerLeave);\n      client.off('stream-removed', removeRemoteStream);\n      client.off('unmute-audio', peerUnmuteAudio);\n      client.off('mute-audio', peerMuteAudio);\n      client.off('unmute-video', peerUnMuteVideo);\n      client.off('mute-video', peerMuteVideo);\n      client.off('error', error);\n    };\n  }, [client]);\n};\n","import { useEffect } from 'react';\nimport { Stream } from 'types/stream';\nimport { usePrevious } from 'react-use';\n\nconst pfSwitchDevice = (\n  stream: Stream,\n  type: 'audio' | 'video',\n  deviceId: string,\n) =>\n  new Promise((resolve, reject) => {\n    stream.switchDevice(\n      type,\n      deviceId,\n      (...args) => {\n        console.log(`${type} switch success`);\n        resolve(args);\n      },\n      (e) => {\n        console.error(e);\n        reject(e);\n      },\n    );\n  });\n\nexport default (\n  stream: Stream | null,\n  { camera, microphone }: { microphone?: string; camera?: string },\n) => {\n  const prevCamera = usePrevious(camera);\n  const prevMicrophone = usePrevious(microphone);\n  useEffect(() => {\n    async function switchDevice() {\n      if (stream === null) return;\n      if (prevMicrophone !== microphone && microphone) {\n        (stream.getAudioTrack() as any)?.stop();\n        await pfSwitchDevice(stream, 'audio', microphone);\n      }\n      if (prevCamera !== camera && camera) {\n        (stream.getVideoTrack() as any)?.stop();\n        await pfSwitchDevice(stream, 'video', camera);\n      }\n    }\n    switchDevice();\n  }, [camera, microphone, prevCamera, prevMicrophone]);\n};\n","const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport type Breakpoint = keyof typeof breakpoints;\n\nexport default breakpoints;\n\nconst friction = 0.02;\n\nexport const MediaBreakpoint = {\n  up: (breakpoint: Breakpoint, vertical = false) => {\n    const value = breakpoints[breakpoint];\n    if (value === undefined) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    return `@media (min-${vertical ? 'height' : 'width'}: ${value}px)`;\n  },\n  down: (breakpoint: Breakpoint, vertical = false) => {\n    const keys = Object.keys(breakpoints);\n    const index = keys.indexOf(breakpoint);\n    if (index === -1) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    const value = breakpoints[keys[index + 1] as Breakpoint];\n    if (value === undefined) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    return `@media (max-${vertical ? 'height' : 'width'}: ${\n      value - friction\n    }px)`;\n  },\n  between: (\n    breakpointMin: Breakpoint,\n    breakpointMax: Breakpoint,\n    vertical = false,\n  ) => {\n    const minValue = breakpoints[breakpointMin];\n    const maxValue = breakpoints[breakpointMax];\n    if (minValue === undefined || maxValue === undefined) {\n      throw new Error(\n        `invalid breakpint: ${breakpointMin} and ${breakpointMax}`,\n      );\n    }\n    return `@media (max-${vertical ? 'height' : 'width'}: ${\n      maxValue - friction\n    }px) and (min-${vertical ? 'height' : 'width'}: ${minValue}px)`;\n  },\n};\n","import { StyledProps } from 'styled-components';\nimport { Breakpoint, MediaBreakpoint as MB } from 'styles/breakpoints';\n\ntype MediaQueryType = typeof MB;\ntype Method = keyof MediaQueryType;\ntype MethodWithoutBetween = Exclude<Method, 'between'>;\n\ntype UpDownFunctionType = (\n  size: Breakpoint,\n  vertical?: boolean,\n) => <P>(props: StyledProps<P>) => string;\n\ntype BetweenFunctionType = (\n  size: Breakpoint,\n  maxSize: Breakpoint,\n  vertical?: boolean,\n) => <P>(props: StyledProps<P>) => string;\n\nconst breakpointFn = (method: Method) => {\n  function func(\n    size: Breakpoint,\n    vertical?: boolean,\n  ): <P>(props: StyledProps<P>) => string;\n  function func(\n    size: Breakpoint,\n    maxSize: Breakpoint,\n    vertical?: boolean,\n  ): <P>(props: StyledProps<P>) => string;\n  function func(\n    size: Breakpoint,\n    maxSizeOrVertical?: Breakpoint | boolean,\n    vertical?: boolean,\n  ) {\n    if (typeof maxSizeOrVertical === 'string') {\n      return <P>(props: StyledProps<P>): string =>\n        props.theme.MediaBreakpoint[method as 'between'](\n          size,\n          maxSizeOrVertical,\n          vertical,\n        );\n    }\n    return <P>(props: StyledProps<P>): string => {\n      method = method as MethodWithoutBetween;\n      return props.theme.MediaBreakpoint[method](size, maxSizeOrVertical);\n    };\n  }\n  return func;\n};\n\nexport const MediaBreakpoint = Object.keys(MB).reduce((acc, method) => {\n  acc[method as Method] = breakpointFn(method as Method);\n  return acc;\n}, {} as { [P in MethodWithoutBetween]: UpDownFunctionType } & { between: BetweenFunctionType });\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport SettingsForm from 'components/settings-form';\nimport AdvancedSettingsForm from 'components/advanced-settings-form';\nimport { Mode, Codec, Resolution } from 'enums/settings';\nimport { Settings } from 'types/setting';\nimport AgoraRTC, { IClientWithPromise } from 'libs/agora-rtc-sdk';\nimport { ToastContainer, errToast, toast } from 'libs/react-toastify';\nimport Player from 'components/player';\nimport useUserMedia from 'hooks/use-user-media';\nimport transformMediaDeviceInfo2Option from 'utils/transform-media-device-info-to-option';\nimport useAgoraClientEvents from 'hooks/use-agora-client-events';\nimport useSwitchDevice from 'hooks/use-switch-device';\nimport useChangeResolution from 'hooks/use-change-resolution';\nimport useAgoraStreamEvents from 'hooks/use-agora-stream-events';\nimport { Container, Row as BSRow, Col } from 'react-bootstrap';\nimport { MediaBreakpoint } from 'styles/helpers/breakpoint';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'reducers';\nimport WithPlayer from 'hocs/with-player';\n\nconst ConnectedPlayer = WithPlayer(Player);\n\nconst Page = styled.div`\n  height: 100%;\n  background: ${Color['page-gray']};\n`;\n\nconst Content = styled.div`\n  max-width: 1280px;\n  margin: auto;\n  padding-bottom: 36px;\n  .advanced-settings {\n    margin-top: 4px;\n  }\n  .local-player {\n    margin-bottom: 8px;\n  }\n  .first-row {\n    padding-top: 36px;\n  }\n  .remote-players {\n    margin-bottom: 8px;\n    display: flex;\n    flex-wrap: wrap;\n    .remote-player {\n      margin: 8px;\n    }\n    .remote-player:first-child {\n      margin-left: 0px;\n    }\n    .remote-player:last-child {\n      margin-left: 0px;\n    }\n  }\n`;\n\nconst Row = styled(BSRow)<{ $reverse?: boolean }>`\n  ${(props) =>\n    props.$reverse &&\n    css`\n      ${MediaBreakpoint.down('sm')} {\n        flex-flow: column-reverse;\n      }\n    `};\n`;\n\nconst Toast = styled(ToastContainer)`\n  z-index: 20000;\n  top: 30px;\n`;\n\nconst initialSettings = {\n  appId: '',\n  channel: '',\n  token: '',\n  uid: '',\n  camera: '',\n  microphone: '',\n  cameraResolution: Resolution.DEFAULT,\n  mode: Mode.RTC,\n  codec: Codec.VP8,\n};\n\nconst App = () => {\n  const [settings, setSettings] = useState<Settings>(initialSettings);\n  const {\n    appId,\n    channel,\n    token,\n    uid,\n    camera,\n    microphone,\n    cameraResolution,\n    mode,\n    codec,\n  } = settings;\n  const [isJoined, setIsJoined] = useState(false);\n  const [isPublished, setIsPublished] = useState(false);\n  const [client, setClient] = useState<IClientWithPromise | null>(null);\n  const { local: localStream, remote: remoteStreams } = useSelector(\n    (state: RootState) => state.stream,\n  );\n  useAgoraClientEvents(client);\n  const { cameras, microphones } = useUserMedia(\n    client,\n    transformMediaDeviceInfo2Option,\n  );\n  useEffect(() => {\n    if (!camera && cameras.length > 0) {\n      updateSettings({\n        camera:\n          cameras.find((m) => m.value === 'default')?.value ?? cameras[0].value,\n      });\n    }\n    if (!microphone && microphones.length > 0) {\n      updateSettings({\n        microphone:\n          microphones.find((m) => m.value === 'default')?.value ??\n          microphones[0].value,\n      });\n    }\n  }, [cameras, microphones]);\n  useSwitchDevice(localStream, { microphone, camera });\n  useChangeResolution(localStream, cameraResolution);\n  useAgoraStreamEvents(localStream);\n  const updateSettings = (updatedSettings: Partial<Settings>) => {\n    setSettings({ ...settings, ...updatedSettings });\n  };\n  return (\n    <Page>\n      <Content>\n        <Container fluid>\n          <Row className=\"first-row\">\n            <Col md={{ offset: 1, span: 10 }}>\n              <Row $reverse>\n                <Col md={6}>\n                  <SettingsForm\n                    appId={appId}\n                    channel={channel}\n                    token={token}\n                    isJoined={isJoined}\n                    isPublished={isPublished}\n                    join={async () => {\n                      if (!appId || !channel || !token) {\n                        return errToast(\n                          `please fill ${\n                            [\n                              { text: 'AppId', value: appId },\n                              { text: 'Channel', value: channel },\n                              { text: 'Token', value: token },\n                            ].find((item) => !item.value)?.text\n                          }`,\n                        );\n                      }\n                      const client = AgoraRTC.createClient({ mode, codec });\n                      if (!appId || !channel || !token) return;\n                      setClient(client);\n                      try {\n                        await client.init(appId);\n                        const streamID = await client.join(\n                          token,\n                          channel,\n                          uid === '' || Number.isNaN(+uid) ? null : uid,\n                        );\n                        const stream = AgoraRTC.createStream({\n                          streamID,\n                          video: true,\n                          audio: true,\n                          screen: false,\n                          cameraId: camera || undefined,\n                          microphoneId: microphone || undefined,\n                        });\n                        setIsJoined(true);\n                        await stream.init();\n                        await client.publish(stream);\n                        setIsPublished(true);\n                        toast(`join channel ${channel}`);\n                      } catch (err) {\n                        console.error(err);\n                        errToast(err);\n                        setClient(null);\n                      }\n                    }}\n                    leave={async () => {\n                      if (!localStream || !client) return;\n                      try {\n                        if (localStream.isPlaying()) {\n                          localStream.stop();\n                        }\n                        localStream.close();\n                        if (isPublished) {\n                          await client.unpublish(localStream);\n                        }\n                        setIsPublished(false);\n                        await client.leave();\n                        setIsJoined(false);\n                        setClient(null);\n                        toast(`leave channel ${channel}`);\n                      } catch (err) {\n                        console.error(err);\n                        errToast(err);\n                      }\n                    }}\n                    publish={async () => {\n                      if (!localStream || !client) return;\n                      try {\n                        await client.publish(localStream);\n                        setIsPublished(true);\n                        toast(`stream published ${localStream.getId()}`);\n                      } catch (err) {\n                        console.error(err);\n                        errToast(err);\n                      }\n                    }}\n                    unpublish={async () => {\n                      if (!localStream || !client) return;\n                      await client.unpublish(localStream);\n                      setIsPublished(false);\n                      toast(`stream unpublished ${localStream.getId()}`);\n                    }}\n                    updateSettings={updateSettings}\n                  />\n                  <AdvancedSettingsForm\n                    className=\"advanced-settings\"\n                    uid={uid}\n                    camera={camera}\n                    cameraOptions={cameras}\n                    microphone={microphone}\n                    microphoneOptions={microphones}\n                    cameraResolution={cameraResolution}\n                    mode={mode}\n                    codec={codec}\n                    isPlaying={localStream?.isPlaying()}\n                    updateSettings={updateSettings}\n                  />\n                </Col>\n                <Col md={6}>\n                  {localStream && (\n                    <ConnectedPlayer\n                      className=\"local-player\"\n                      stream={localStream}\n                      label={localStream.getId() as string}\n                      width=\"100%\"\n                      height=\"330\"\n                    />\n                  )}\n                  <div className=\"remote-players\">\n                    {remoteStreams.map((stream) => (\n                      <ConnectedPlayer\n                        className=\"remote-player\"\n                        key={stream.getId()}\n                        stream={stream}\n                        label={stream.getId() as string}\n                      />\n                    ))}\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </Content>\n      <Toast\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        draggable\n        pauseOnHover\n      />\n    </Page>\n  );\n};\n\nexport default App;\n","import React, { FC, ComponentType } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Stream } from 'types/stream';\nimport { RootState } from 'reducers';\nimport {\n  muteAudioById,\n  unmuteAudioById,\n  muteVideoById,\n  unmuteVideoById,\n} from 'actions/stream';\nimport { PeerAVEventType } from 'types/peer-av-event';\n\ntype InjectedType = {\n  isAudioMuted: boolean;\n  isVideoMuted: boolean;\n  onCameraClick: () => void;\n  onMicrophoneClick: () => void;\n};\n\nconst WithPlayer = <P extends InjectedType>(\n  WrappedComponent: ComponentType<any>,\n) => {\n  const Component: FC<\n    {\n      className?: string;\n      stream: Stream;\n      label?: string;\n      width?: string | number;\n      height?: string | number;\n    } & Omit<P, keyof InjectedType>\n  > = ({ children, stream, ...rest }) => {\n    const { isAudioMuted, isVideoMuted } = useSelector(\n      (state: RootState) => state.stream.map[stream.getId()],\n    );\n    const dispatch = useDispatch();\n    return (\n      <WrappedComponent\n        {...rest}\n        stream={stream}\n        isAudioMuted={isAudioMuted}\n        isVideoMuted={isVideoMuted}\n        onCameraClick={() => {\n          const uid = stream.getId();\n          if (isVideoMuted) {\n            stream.unmuteVideo();\n            dispatch(\n              unmuteVideoById({ uid, type: PeerAVEventType.UnmuteVideo }),\n            );\n          } else {\n            stream.muteVideo();\n            dispatch(muteVideoById({ uid, type: PeerAVEventType.MuteVideo }));\n          }\n        }}\n        onMicrophoneClick={() => {\n          const uid = stream.getId();\n          if (isAudioMuted) {\n            stream.unmuteAudio();\n            dispatch(\n              unmuteAudioById({ uid, type: PeerAVEventType.UnmuteAudio }),\n            );\n          } else {\n            stream.muteAudio();\n            dispatch(muteAudioById({ uid, type: PeerAVEventType.MuteAudio }));\n          }\n          // workaround the issue https://github.com/AgoraIO/rtc-web-archive/issues/15\n          if (isVideoMuted) {\n            setTimeout(() => {\n              stream.muteVideo();\n              dispatch(muteVideoById({ uid, type: PeerAVEventType.MuteVideo }));\n            }, 10);\n          } else {\n            setTimeout(() => {\n              stream.unmuteVideo();\n              dispatch(\n                unmuteVideoById({ uid, type: PeerAVEventType.UnmuteVideo }),\n              );\n            }, 10);\n          }\n        }}\n      >\n        {children}\n      </WrappedComponent>\n    );\n  };\n\n  return Component;\n};\n\nexport default WithPlayer;\n","import { useEffect } from 'react';\nimport { Stream } from 'types/stream';\nimport { usePrevious } from 'react-use';\n\nexport default (stream: Stream | null, resolution: string) => {\n  const prevResolution = usePrevious(resolution);\n  useEffect(() => {\n    if (stream === null) return;\n    if (prevResolution !== resolution && resolution) {\n      stream.setVideoProfile(resolution);\n    }\n  }, [prevResolution, resolution]);\n};\n","import { useEffect } from 'react';\nimport { Stream } from 'types/stream';\nimport { useDispatch } from 'react-redux';\nimport { updateLocalStream } from 'actions/stream';\n\nexport default (stream: Stream | null) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (stream === null) return;\n    function playerStatusChange(evt: any) {\n      console.log('playerStatusChange', evt);\n      dispatch(updateLocalStream(stream));\n    }\n    stream.on('player-status-change', playerStatusChange);\n  }, [stream]);\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\n\nexport default createGlobalStyle`\nhtml {\n  font-size: 16px;\n  background-color: ${Color.white};\n}\nbody {\n  color: #484848;\n  font-size: 1rem;\n  line-height: 1.5;\n  font-weight: 400;\n}\n* {\n  box-sizing: border-box;\n}\n`;\n","import { Stream } from 'types/stream';\n\nexport const isAudioMuted = (stream: Stream) =>\n  !!(stream.getAudioTrack() as any)?.muted;\nexport const isVideoMuted = (stream: Stream) =>\n  !!(stream.getVideoTrack() as any)?.muted;\n","import {\n  Stream,\n  StreamActionTypes,\n  UPDATE_LOCAL_STREAM,\n  UPDATE_REMOTE_STREAMS,\n  CLEAR_ALL_STREAMS,\n} from 'types/stream';\nimport { PeerAVEventType } from 'types/peer-av-event';\nimport { isAudioMuted, isVideoMuted } from 'utils/stream';\n\ntype CustomStream = Stream & {\n  isAudioMuted: boolean;\n  isVideoMuted: boolean;\n};\n\nconst initialState: {\n  local: Stream | null;\n  remote: Stream[];\n  map: { [k in string]: CustomStream };\n} = {\n  local: null,\n  remote: [],\n  map: {},\n};\n\nconst normalize = (list: Stream[]) =>\n  list.reduce((acc, item) => {\n    acc[item.getId()] = {\n      ...item,\n      isAudioMuted: isAudioMuted(item),\n      isVideoMuted: isVideoMuted(item),\n    };\n    return acc;\n  }, {} as { [k in string]: CustomStream });\n\nexport default (state = initialState, action: StreamActionTypes) => {\n  switch (action.type) {\n    case UPDATE_LOCAL_STREAM: {\n      const list = action.payload\n        ? state.remote.concat(action.payload)\n        : state.remote;\n      return {\n        ...state,\n        local: action.payload,\n        map: normalize(list),\n      };\n    }\n    case UPDATE_REMOTE_STREAMS: {\n      const list = action.payload(state.remote);\n      return {\n        ...state,\n        remote: list,\n        map: normalize(state.local ? list.concat(state.local) : list),\n      };\n    }\n    case PeerAVEventType.MuteAudio: {\n      const stream = state.map[action.payload.uid];\n      return {\n        ...state,\n        map: {\n          ...state.map,\n          [action.payload.uid]: {\n            ...stream,\n            isAudioMuted: true,\n          },\n        },\n      };\n    }\n    case PeerAVEventType.UnmuteAudio: {\n      const stream = state.map[action.payload.uid];\n      return {\n        ...state,\n        map: {\n          ...state.map,\n          [action.payload.uid]: {\n            ...stream,\n            isAudioMuted: false,\n          },\n        },\n      };\n    }\n    case PeerAVEventType.MuteVideo: {\n      const stream = state.map[action.payload.uid];\n      return {\n        ...state,\n        map: {\n          ...state.map,\n          [action.payload.uid]: {\n            ...stream,\n            isVideoMuted: true,\n          },\n        },\n      };\n    }\n    case PeerAVEventType.UnmuteVideo: {\n      const stream = state.map[action.payload.uid];\n      return {\n        ...state,\n        map: {\n          ...state.map,\n          [action.payload.uid]: {\n            ...stream,\n            isVideoMuted: false,\n          },\n        },\n      };\n    }\n    case CLEAR_ALL_STREAMS: {\n      return initialState;\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport stream from './stream';\n\nconst rootReducer = combineReducers({ stream });\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/app';\nimport { ThemeProvider } from 'styled-components';\nimport colors from 'styles/colors';\nimport { MediaBreakpoint } from 'styles/breakpoints';\nimport GlobalStyle from 'components/global-style';\nimport { Normalize } from 'styled-normalize';\nimport { Provider } from 'react-redux';\nimport createStore from './create-store';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/scss/bootstrap-grid.scss';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={{ colors, MediaBreakpoint }}>\n      <Normalize />\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from 'reducers';\n\nexport default (initialState = {}) => {\n  const middlewares = [thunk];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  const composeEnhancers =\n    ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true,\n        traceLimit: 25,\n      })) ||\n    compose;\n\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(...enhancers),\n  );\n\n  return store;\n};\n"],"sourceRoot":""}