{"version":3,"sources":["styles/colors.ts","styles/helpers/color.ts","styles/breakpoints.ts","styles/helpers/breakpoint.ts","components/input/index.tsx","components/button/index.tsx","components/settings-form/index.tsx","enums/settings.ts","components/dropdown-select/index.tsx","components/radio-button/index.tsx","components/advanced-settings-form/index.tsx","libs/agora-rtc-sdk.ts","libs/react-toastify.ts","components/layout/index.tsx","hooks/use-user-media.ts","utils/transform-media-device-info-to-option.ts","components/app/index.tsx","hooks/use-switch-device.ts","components/global-style/index.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","primary","white","black","disabled","charcoal","silver","timberwolf","colorFn","color","props","theme","Color","Object","keys","reduce","acc","name","breakpoints","xs","sm","md","lg","xl","friction","MediaBreakpoint","up","breakpoint","vertical","value","undefined","Error","down","index","indexOf","between","breakpointMin","breakpointMax","minValue","maxValue","MB","method","size","maxSizeOrVertical","breakpointFn","Input","styled","input","Btn","button","css","Icon","loading","rest","Button","children","innerRef","ref","icon","faSpinner","spin","Mode","Codec","Resolution","Card","div","noop","Settings","appId","channel","token","isJoined","isPublished","updateSettings","join","leave","publish","unpublish","onChange","e","target","htmlFor","placeholder","id","aria-label","className","onClick","StyledSelect","Select","FontAwesomeIcon","DropdownSelect","options","selectedOption","clearOnBlur","searchable","values","dropdownHandleRenderer","state","dropdown","faCaretUp","faCaretDown","InlineBlock","RadioButton","label","checked","type","cameraResolutionOptions","DEFAULT","_480P","_720P","_1080P","uid","camera","mode","codec","cameraOptions","microphone","microphoneOptions","cameraResolution","onChangeSelect","length","find","option","LIVE","RTC","H264","VP8","enhancedAgoraRTC","enhanceAgoraRTC","AgoraRTC","errToast","mgs","originalToast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toast","Row","Col","flex","noTransform","d","fakeClient","createClient","info","deviceId","kind","Page","Content","Toast","ToastContainer","initialSettings","App","useState","settings","setSettings","setIsJoined","setIsPublished","client","setClient","localStream","setLocalStream","setRemoteStreams","useEffect","removeRemoteStreamByUid","list","filter","s","getId","addLocalStream","event","stream","addRemoteStreams","concat","remoteStreamSub","peerLeave","reason","removeRemoteStream","err","console","on","off","transform","cameras","setCameras","microphones","setMicrophones","onCameraChange","onRecordingDeviceChange","a","log","getCameras","message","getRecordingDevices","item","map","useUserMedia","transformMediaDeviceInfo2Option","switchDevice","useSwitchDevice","updatedSettings","getAudioTrack","text","init","createStream","streamID","video","audio","screen","cameraId","microphoneId","isPlaying","stop","close","fit","newestOnTop","rtl","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3992473c.chunk.js","sourcesContent":["const colors = {\n  primary: '#2020e5',\n  white: '#FFFFFF',\n  black: '#000000',\n  disabled: '#c6cbd4',\n  'dim-gray': '#6b6b6b',\n  'tiffany-blue': '#06b5b3',\n  charcoal: '#313d47',\n  silver: '#bdbdbd',\n  'dark-gray': '#a4a9ac',\n  timberwolf: '#d8d8d8',\n  'page-gray': '#fafafa',\n};\n\nexport default colors;\nexport type ColorsType = typeof colors;\n","import { StyledProps } from 'styled-components';\nimport { rgba as polishedRGBA } from 'polished';\nimport colors, { ColorsType } from 'styles/colors';\n\ntype ColorName = keyof ColorsType;\n\nconst colorFn = (color: ColorName) => <P>(props: StyledProps<P>): string =>\n  props.theme.colors[color];\n\nexport const rgba = (color: ColorName, alpha: number) => <P>(\n  props: StyledProps<P>,\n): string => {\n  const themeColor = colorFn(color)(props);\n  return polishedRGBA(themeColor, alpha);\n};\n\nexport const Color = Object.keys(colors).reduce((acc, name) => {\n  acc[name as ColorName] = colorFn(name as ColorName);\n  return acc;\n}, {} as { [P in keyof ColorsType]: <T>(props: StyledProps<T>) => ColorsType[P] });\n","const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport type Breakpoint = keyof typeof breakpoints;\n\nexport default breakpoints;\n\nconst friction = 0.02;\n\nexport const MediaBreakpoint = {\n  up: (breakpoint: Breakpoint, vertical = false) => {\n    const value = breakpoints[breakpoint];\n    if (value === undefined) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    return `@media (min-${vertical ? 'height' : 'width'}: ${value}px)`;\n  },\n  down: (breakpoint: Breakpoint, vertical = false) => {\n    const keys = Object.keys(breakpoints);\n    const index = keys.indexOf(breakpoint);\n    if (index === -1) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    const value = breakpoints[keys[index + 1] as Breakpoint];\n    if (value === undefined) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    return `@media (max-${vertical ? 'height' : 'width'}: ${\n      value - friction\n    }px)`;\n  },\n  between: (\n    breakpointMin: Breakpoint,\n    breakpointMax: Breakpoint,\n    vertical = false,\n  ) => {\n    const minValue = breakpoints[breakpointMin];\n    const maxValue = breakpoints[breakpointMax];\n    if (minValue === undefined || maxValue === undefined) {\n      throw new Error(\n        `invalid breakpint: ${breakpointMin} and ${breakpointMax}`,\n      );\n    }\n    return `@media (max-${vertical ? 'height' : 'width'}: ${\n      maxValue - friction\n    }px) and (min-${vertical ? 'height' : 'width'}: ${minValue}px)`;\n  },\n};\n","import { StyledProps } from 'styled-components';\nimport { Breakpoint, MediaBreakpoint as MB } from 'styles/breakpoints';\n\ntype MediaQueryType = typeof MB;\ntype Method = keyof MediaQueryType;\ntype MethodWithoutBetween = Exclude<Method, 'between'>;\n\ntype UpDownFunctionType = (\n  size: Breakpoint,\n  vertical?: boolean,\n) => <P>(props: StyledProps<P>) => string;\n\ntype BetweenFunctionType = (\n  size: Breakpoint,\n  maxSize: Breakpoint,\n  vertical?: boolean,\n) => <P>(props: StyledProps<P>) => string;\n\nconst breakpointFn = (method: Method) => {\n  function func(\n    size: Breakpoint,\n    vertical?: boolean,\n  ): <P>(props: StyledProps<P>) => string;\n  function func(\n    size: Breakpoint,\n    maxSize: Breakpoint,\n    vertical?: boolean,\n  ): <P>(props: StyledProps<P>) => string;\n  function func(\n    size: Breakpoint,\n    maxSizeOrVertical?: Breakpoint | boolean,\n    vertical?: boolean,\n  ) {\n    if (typeof maxSizeOrVertical === 'string') {\n      return <P>(props: StyledProps<P>): string =>\n        props.theme.MediaBreakpoint[method as 'between'](\n          size,\n          maxSizeOrVertical,\n          vertical,\n        );\n    }\n    return <P>(props: StyledProps<P>): string => {\n      method = method as MethodWithoutBetween;\n      return props.theme.MediaBreakpoint[method](size, maxSizeOrVertical);\n    };\n  }\n  return func;\n};\n\nexport const MediaBreakpoint = Object.keys(MB).reduce((acc, method) => {\n  acc[method as Method] = breakpointFn(method as Method);\n  return acc;\n}, {} as { [P in MethodWithoutBetween]: UpDownFunctionType } & { between: BetweenFunctionType });\n","import styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\n\nconst Input = styled.input`\n  width: 100%;\n  color: ${Color.charcoal};\n  border-radius: 4px;\n  border: 1px solid ${Color['dark-gray']};\n  padding: 14px 12px;\n  background: ${Color.white};\n  &::placeholder {\n    color: ${Color.silver};\n  }\n`;\n\nexport default Input;\n","import React, { FC, RefObject } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nexport type Props = RTW.Button<{\n  loading?: boolean;\n  primary?: boolean;\n  innerRef?: RefObject<HTMLButtonElement>;\n}>;\n\nconst Btn = styled.button<{ primary?: boolean }>`\n  &,\n  &:focus {\n    outline: none;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  padding: 0;\n  ${(props) =>\n    props.primary\n      ? css`\n          border: 1px solid ${Color.primary};\n          background-color: ${Color.primary};\n          color: ${Color.white};\n        `\n      : css`\n          border: 1px solid ${Color['dim-gray']};\n          background-color: ${Color.white};\n          color: ${Color['dim-gray']};\n        `}\n  font-weight: 500;\n  &:disabled {\n    cursor: not-allowed;\n    background-color: ${Color.disabled};\n    background-image: none;\n    border: 1px solid ${Color.disabled};\n    color: ${Color.white};\n  }\n`;\n\nconst Icon = styled(({ loading, ...rest }) => <FontAwesomeIcon {...rest} />)<{\n  loading?: boolean;\n}>`\n  && {\n    transition: width 0.5s, margin-right 0.5s;\n    width: ${(props) => (props.loading ? undefined : '0')};\n    margin-right: ${(props) => (props.loading ? '4px' : '0')};\n    ${(props) =>\n      props.loading === false &&\n      css`\n        path {\n          display: none;\n        }\n      `}\n  }\n`;\n\nconst Button: FC<Props> = ({\n  children,\n  loading = false,\n  disabled,\n  innerRef,\n  primary = false,\n  ...rest\n}) => {\n  return (\n    <Btn\n      {...rest}\n      ref={innerRef}\n      disabled={loading || disabled}\n      primary={primary}\n    >\n      <Icon icon={faSpinner} spin={loading} loading={loading} /> {children}\n    </Btn>\n  );\n};\n\nexport default Button;\n","import React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport Input from 'components/input';\nimport { BasicSettings } from 'types/setting';\nimport Btn from 'components/button';\n\ntype Props = BasicSettings & {\n  isJoined: boolean;\n  isPublished: boolean;\n  updateSettings: (updatedSettings: Partial<BasicSettings>) => void;\n  join?: () => void;\n  leave?: () => void;\n  publish?: () => void;\n  unpublish?: () => void;\n};\n\nconst Card = styled.div`\n  width: 430px;\n  padding: 24px;\n  background-color: ${Color.white};\n  border: 1px solid ${Color.timberwolf};\n  border-radius: 4px;\n  box-shadow: 0px 1px 1px 0px ${Color.timberwolf};\n  > label {\n    font-size: 0.75rem;\n    color: ${Color.silver};\n  }\n  > input {\n    margin: 0 0 8px;\n  }\n  .action-panel {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst Button = styled(Btn)`\n  padding: 12px 16px;\n  border-radius: 2px;\n  font-size: 0.85rem;\n`;\n\nconst noop = () => {};\n\nconst Settings: FC<RTW.Div<Props>> = ({\n  appId,\n  channel,\n  token,\n  isJoined,\n  isPublished,\n  updateSettings,\n  join = noop,\n  leave = noop,\n  publish = noop,\n  unpublish = noop,\n  ...rest\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    updateSettings({ [e.target.name]: e.target.value });\n  return (\n    <Card {...rest}>\n      <label htmlFor=\"appId\">App ID</label>\n      <Input\n        placeholder=\"App ID\"\n        value={appId}\n        name=\"appId\"\n        id=\"appId\"\n        aria-label=\"appId\"\n        onChange={onChange}\n      />\n      <label htmlFor=\"channel\">Channel</label>\n      <Input\n        placeholder=\"channel\"\n        value={channel}\n        name=\"channel\"\n        id=\"channel\"\n        aria-label=\"channel\"\n        onChange={onChange}\n      />\n      <label htmlFor=\"token\">Token</label>\n      <Input\n        placeholder=\"token\"\n        value={token}\n        name=\"token\"\n        id=\"token\"\n        aria-label=\"token\"\n        onChange={onChange}\n      />\n      <div className=\"action-panel\">\n        <Button disabled={isJoined} primary onClick={join}>\n          JOIN\n        </Button>\n        <Button disabled={!isJoined} primary onClick={leave}>\n          LEAVE\n        </Button>\n        <Button disabled={!isJoined || isPublished} primary onClick={publish}>\n          PUBLISH\n        </Button>\n        <Button disabled={!isPublished} primary onClick={unpublish}>\n          UNPUBLISH\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Settings;\n","export enum Mode {\n  LIVE = 'live',\n  RTC = 'rtc',\n}\n\nexport enum Codec {\n  H264 = 'h264',\n  VP8 = 'vp8',\n}\n\nexport enum Resolution {\n  DEFAULT = 'default',\n  _480P = '480p',\n  _720P = '720p',\n  _1080P = '1080p',\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Select, { SelectProps } from 'react-dropdown-select';\nimport { Color } from 'styles/helpers/color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\ntype Props<T> = Omit<SelectProps<T>, 'values'> & { selectedOption?: T };\n\nconst StyledSelect = styled(Select)`\n  && {\n    font-size: 16px;\n    color: ${Color.charcoal};\n    border-radius: 4px;\n    border: 1px solid ${Color['dark-gray']};\n    padding: 14px 12px;\n    background: ${Color.white};\n    &:hover {\n      border: 1px solid ${Color['dark-gray']};\n    }\n    &:focus,\n    &:focus-within {\n      box-shadow: none;\n      outline: none;\n      border: 1px solid ${Color['dark-gray']};\n    }\n    .react-dropdown-select-dropdown {\n      border-radius: 4px;\n      padding: 4px 0;\n    }\n    .react-dropdown-select-content span {\n      display: flex;\n      align-items: center;\n    }\n    .react-dropdown-select-content input {\n      color: ${Color.charcoal};\n      width: 0;\n      font-size: 16px;\n      &::placeholder {\n        color: ${Color.silver};\n      }\n    }\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: ${Color['dim-gray']};\n  font-size: 18px;\n`;\n\nconst DropdownSelect = <T extends string | object = {}>({\n  options,\n  selectedOption,\n  placeholder,\n  name,\n  onChange,\n  className,\n}: Props<T>): JSX.Element => {\n  return (\n    <StyledSelect\n      clearOnBlur\n      className={className}\n      searchable={false}\n      options={options}\n      values={selectedOption ? [selectedOption] : []}\n      placeholder={placeholder}\n      color=\"#2020e5\"\n      name={name}\n      dropdownHandleRenderer={({ state }) => {\n        return state.dropdown ? (\n          <Icon icon={faCaretUp} />\n        ) : (\n          <Icon icon={faCaretDown} />\n        );\n      }}\n      onChange={onChange as (value: (string | object)[]) => void}\n    />\n  );\n};\n\nexport default DropdownSelect;\n","import React, { FC, ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  label: string;\n  name: string;\n  value: string;\n  checked: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n};\n\nconst InlineBlock = styled.div`\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  * {\n    cursor: pointer;\n  }\n`;\n\nconst Input = styled.input`\n  margin-right: 8px;\n`;\n\nconst RadioButton: FC<Props> = ({\n  label,\n  value,\n  name,\n  checked,\n  onChange = () => {},\n  className,\n}) => {\n  return (\n    <InlineBlock className={className}>\n      <Input\n        value={value}\n        type=\"radio\"\n        name={name}\n        onChange={onChange}\n        checked={checked}\n        aria-label={label}\n      />\n      <label htmlFor={name}>{label}</label>\n    </InlineBlock>\n  );\n};\n\nexport default RadioButton;\n","import React, { FC, ChangeEvent } from 'react';\nimport { Mode, Codec, Resolution } from 'enums/settings';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport Input from 'components/input';\nimport Select from 'components/dropdown-select';\nimport RadioButton from 'components/radio-button';\nimport { AdvancedSettings } from 'types/setting';\n\nconst Card = styled.div`\n  width: 430px;\n  padding: 24px;\n  background-color: ${Color.white};\n  border: 1px solid ${Color.timberwolf};\n  border-radius: 4px;\n  box-shadow: 0px 1px 1px 0px ${Color.timberwolf};\n  > label {\n    font-size: 0.75rem;\n    color: ${Color.silver};\n  }\n  > input,\n  .select {\n    margin: 0 0 8px;\n  }\n  .radio-buttons {\n    margin-bottom: 16px;\n    > div {\n      margin-right: 8px;\n    }\n  }\n`;\n\ntype Option = {\n  value: string;\n  label: string;\n};\n\ntype Props = AdvancedSettings & {\n  cameraOptions: Option[];\n  microphoneOptions: Option[];\n  updateSettings: (updatedSettings: Partial<AdvancedSettings>) => void;\n};\n\nconst cameraResolutionOptions = [\n  {\n    label: Resolution.DEFAULT,\n    value: Resolution.DEFAULT,\n  },\n  {\n    label: Resolution._480P,\n    value: Resolution._480P,\n  },\n  {\n    label: Resolution._720P,\n    value: Resolution._720P,\n  },\n  {\n    label: Resolution._1080P,\n    value: Resolution._1080P,\n  },\n];\n\nconst Settings: FC<RTW.Div<Props>> = ({\n  uid,\n  camera,\n  mode,\n  codec,\n  cameraOptions,\n  microphone,\n  microphoneOptions,\n  cameraResolution,\n  updateSettings,\n  ...rest\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    updateSettings({ [e.target.name]: e.target.value });\n  const onChangeSelect = (name: string) => (options: Option[]) =>\n    updateSettings({ [name]: options[0].value });\n  return (\n    <Card {...rest}>\n      <h3>ADVANCED SETTINGS</h3>\n      <label htmlFor=\"uid\">UID</label>\n      <Input\n        value={uid}\n        name=\"uid\"\n        id=\"uid\"\n        aria-label=\"uid\"\n        onChange={onChange}\n        placeholder=\"uid\"\n      />\n      {cameraOptions?.length > 0 && (\n        <>\n          <label>CAMERA</label>\n          <Select\n            placeholder=\"camera\"\n            className=\"select\"\n            options={cameraOptions}\n            onChange={onChangeSelect('camera')}\n            selectedOption={cameraOptions.find(\n              (option) => option.value === camera,\n            )}\n          />\n        </>\n      )}\n      {microphoneOptions?.length > 0 && (\n        <>\n          <label>MICROPHONE</label>\n          <Select\n            placeholder=\"microphone\"\n            className=\"select\"\n            options={microphoneOptions}\n            onChange={onChangeSelect('microphone')}\n            selectedOption={microphoneOptions.find(\n              (option) => option.value === microphone,\n            )}\n          />\n        </>\n      )}\n      <label>CAMERA RESOLUTION</label>\n      <Select\n        placeholder=\"camera resolution\"\n        className=\"select\"\n        options={cameraResolutionOptions}\n        onChange={onChangeSelect('cameraResolution')}\n        selectedOption={cameraResolutionOptions.find(\n          (option) => option.value === cameraResolution,\n        )}\n      />\n      <label>Mode</label>\n      <div className=\"radio-buttons\">\n        <RadioButton\n          label=\"live\"\n          value={Mode.LIVE}\n          name=\"mode\"\n          checked={Mode.LIVE === mode}\n          onChange={onChange}\n        />\n        <RadioButton\n          label=\"rtc\"\n          value={Mode.RTC}\n          name=\"mode\"\n          checked={Mode.RTC === mode}\n          onChange={onChange}\n        />\n      </div>\n      <label>CODEC</label>\n      <div className=\"radio-buttons\">\n        <RadioButton\n          label=\"h264\"\n          value={Codec.H264}\n          name=\"codec\"\n          checked={Codec.H264 === codec}\n          onChange={onChange}\n        />\n        <RadioButton\n          label=\"vp8\"\n          value={Codec.VP8}\n          name=\"codec\"\n          checked={Codec.VP8 === codec}\n          onChange={onChange}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default Settings;\n","import AgoraRTC from 'agora-rtc-sdk';\nimport enhanceAgoraRTC from 'agoran-awe';\n\nconst enhancedAgoraRTC = enhanceAgoraRTC(AgoraRTC);\nexport type Stream = AgoraRTC.Stream;\nexport type Client = AgoraRTC.Client;\nexport default enhancedAgoraRTC;\nexport type IClientWithPromise = ReturnType<\n  typeof enhancedAgoraRTC.createClient\n>;\nexport type IStreamWithPromise = ReturnType<\n  typeof enhancedAgoraRTC.createStream\n>;\n","import { toast as originalToast, ToastOptions } from 'react-toastify';\n\nexport * from 'react-toastify';\nexport const errToast = (mgs: string, options?: ToastOptions) => {\n  originalToast.error(mgs, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    ...options,\n  });\n};\n\nexport const toast = (mgs: string, options?: ToastOptions) => {\n  originalToast(mgs, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    ...options,\n  });\n};\n","import styled from 'styled-components';\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Col = styled.div<{ flex?: number }>`\n  flex: ${(props) => props.flex};\n`;\n","import { useState, useEffect } from 'react';\nimport AgoraRTC, { IClientWithPromise } from 'libs/agora-rtc-sdk';\nconst noTransform = (d: any) => d;\n\nconst fakeClient = AgoraRTC.createClient({\n  mode: 'live',\n  codec: 'vp8',\n});\n\nexport default (\n  client: IClientWithPromise | null,\n  transform?: (d: MediaDeviceInfo) => any,\n) => {\n  client = client ?? fakeClient;\n  transform = transform ?? noTransform;\n  const [cameras, setCameras] = useState<MediaDeviceInfo[]>([]);\n  const [microphones, setMicrophones] = useState<MediaDeviceInfo[]>([]);\n  useEffect(() => {\n    if (!client) return;\n    async function onCameraChange() {\n      console.log('onCameraChange');\n      try {\n        const cameras = await client?.getCameras();\n        if (cameras?.length) {\n          setCameras(cameras);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setCameras([]);\n      }\n    }\n    async function onRecordingDeviceChange() {\n      console.log('onRecordingDeviceChange');\n      try {\n        const microphones = await client?.getRecordingDevices();\n        if (microphones?.length) {\n          setMicrophones(microphones);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setMicrophones([]);\n      }\n    }\n    client.on('camera-changed', onCameraChange);\n    client.on('recording-device-changed', onRecordingDeviceChange);\n    onCameraChange();\n    onRecordingDeviceChange();\n    return () => {\n      client?.off('camera-changed', onCameraChange);\n      client?.off('recording-device-changed', onRecordingDeviceChange);\n    };\n  }, [client]);\n  return {\n    cameras: cameras.filter((item) => !!item.deviceId).map(transform),\n    microphones: microphones.filter((item) => !!item.deviceId).map(transform),\n  };\n};\n","export default (info: MediaDeviceInfo) => {\n  const { deviceId, kind, label } = info;\n  return {\n    kind,\n    label,\n    value: deviceId,\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport { MediaBreakpoint } from 'styles/helpers/breakpoint';\nimport SettingsForm from 'components/settings-form';\nimport AdvancedSettingsForm from 'components/advanced-settings-form';\nimport { Mode, Codec, Resolution } from 'enums/settings';\nimport { Settings } from 'types/setting';\nimport AgoraRTC, { IClientWithPromise, Stream } from 'libs/agora-rtc-sdk';\nimport { ToastContainer, errToast, toast } from 'libs/react-toastify';\nimport StreamPlayer from 'agora-stream-player';\nimport { Row, Col } from 'components/layout';\nimport useUserMedia from 'hooks/use-user-media';\nimport transformMediaDeviceInfo2Option from 'utils/transform-media-device-info-to-option';\nimport useSwitchDevice from 'hooks/use-switch-device';\n\nconst Page = styled.div`\n  height: 100%;\n  max-width: 1280px;\n  margin: auto;\n  background: ${Color['page-gray']};\n`;\n\nconst Content = styled.div`\n  padding: 3rem 1.5rem;\n\n  ${MediaBreakpoint.down('md')} {\n    padding: 0.5rem;\n  }\n  .advanced-settings {\n    margin-top: 4px;\n  }\n`;\n\nconst Toast = styled(ToastContainer)`\n  z-index: 20000;\n  top: 60px;\n`;\n\nconst initialSettings = {\n  appId: '3c8f8535f5ca4d23a2c6d550745c1141',\n  channel: 'test',\n  token:\n    '00634e5cdd2dd0547368b549ddbc83f0f8bIABtxBrj3R89/CCPbqjQJyp1Xsi8fykDn2/wtcOOhcE1bgx+f9gAAAAAEACpE93ISXTsXwEAAQBKdOxf',\n  uid: '',\n  camera: '',\n  microphone: '',\n  cameraResolution: Resolution.DEFAULT,\n  mode: Mode.LIVE,\n  codec: Codec.H264,\n};\n\nconst App = () => {\n  const [settings, setSettings] = useState<Settings>(initialSettings);\n  const {\n    appId,\n    channel,\n    token,\n    uid,\n    camera,\n    microphone,\n    cameraResolution,\n    mode,\n    codec,\n  } = settings;\n  const [isJoined, setIsJoined] = useState(false);\n  const [isPublished, setIsPublished] = useState(false);\n  const [client, setClient] = useState<IClientWithPromise | null>(null);\n  const [localStream, setLocalStream] = useState<Stream | null>(null);\n  const [remoteStreams, setRemoteStreams] = useState<Stream[]>([]);\n  useEffect(() => {\n    if (!client) {\n      setLocalStream(null);\n      setRemoteStreams([]);\n      return;\n    }\n    function removeRemoteStreamByUid(uid: string | number) {\n      setRemoteStreams((list) =>\n        list.filter((s) => `${s.getId()}` !== `${uid}`),\n      );\n    }\n    function addLocalStream(event: { stream: Stream }) {\n      const { stream } = event;\n      toast('local stream published');\n      setLocalStream(stream);\n    }\n    function addRemoteStreams(event: { stream: Stream }) {\n      const { stream } = event;\n      toast(`new stream added ${stream.getId()}`);\n      setRemoteStreams((list) => list?.concat(stream));\n    }\n    function remoteStreamSub(event: { stream: Stream }) {\n      const { stream } = event;\n      toast(`new stream subscribed ${stream.getId()}`);\n    }\n    function peerLeave(event: { uid: string; reason: string }) {\n      const { uid, reason } = event;\n      toast(`user ${uid} leave because of ${reason}`);\n      removeRemoteStreamByUid(uid);\n    }\n    function removeRemoteStream(event: { stream: Stream }) {\n      const { stream } = event;\n      const uid = stream.getId();\n      toast(`remote stream was removed ${uid}`);\n      removeRemoteStreamByUid(uid);\n    }\n    function error(err: { type: 'error'; reason: any }) {\n      console.error(err);\n      errToast(err.reason);\n    }\n    client.on('stream-published', addLocalStream);\n    client.on('stream-added', addRemoteStreams);\n    client.on('stream-subscribed', remoteStreamSub);\n    client.on('peer-leave', peerLeave);\n    client.on('stream-removed', removeRemoteStream);\n    client.on('error', error);\n    return () => {\n      client.off('stream-published', addLocalStream);\n      client.off('stream-added', addRemoteStreams);\n      client.off('stream-subscribed', remoteStreamSub);\n      client.off('peer-leave', peerLeave);\n      client.off('stream-removed', removeRemoteStream);\n      client.off('error', error);\n    };\n  }, [client]);\n  const { cameras, microphones } = useUserMedia(\n    client,\n    transformMediaDeviceInfo2Option,\n  );\n  useEffect(() => {\n    if (!camera && cameras.length > 0) {\n      updateSettings({ camera: cameras[0].value });\n    }\n    if (!microphone && microphones.length > 0) {\n      console.log('microphones', microphones);\n      updateSettings({ microphone: 'default' });\n    }\n  }, [cameras, microphones]);\n  useSwitchDevice(localStream, { microphone, camera });\n  const updateSettings = (updatedSettings: Partial<Settings>) => {\n    setSettings({ ...settings, ...updatedSettings });\n  };\n  // console.log('video track', localStream?.getVideoTrack());\n  console.log('audio track', localStream?.getAudioTrack(), microphone);\n\n  return (\n    <Page>\n      <Content>\n        <Row>\n          <Col>\n            <SettingsForm\n              appId={appId}\n              channel={channel}\n              token={token}\n              isJoined={isJoined}\n              isPublished={isPublished}\n              join={async () => {\n                if (!appId || !channel || !token) {\n                  return errToast(\n                    `please fill ${\n                      [\n                        { text: 'AppId', value: appId },\n                        { text: 'Channel', value: channel },\n                        { text: 'Token', value: token },\n                      ].find((item) => !item.value)?.text\n                    }`,\n                  );\n                }\n                const client = AgoraRTC.createClient({ mode, codec });\n                if (!appId || !channel || !token) return;\n                setClient(client);\n                try {\n                  await client.init(appId);\n                  await client.join(token, channel, uid === '' ? null : uid);\n                  const stream = AgoraRTC.createStream({\n                    streamID: uid || `local-user`,\n                    video: true,\n                    audio: true,\n                    screen: false,\n                    cameraId: camera || undefined,\n                    microphoneId: microphone || undefined,\n                  });\n                  setIsJoined(true);\n                  await stream.init();\n                  await client.publish(stream);\n                  setIsPublished(true);\n                  toast(`join channel ${channel}`);\n                } catch (err) {\n                  console.error(err);\n                  errToast(err);\n                  setClient(null);\n                }\n              }}\n              leave={async () => {\n                if (!localStream || !client) return;\n                try {\n                  if (localStream.isPlaying()) {\n                    localStream.stop();\n                  }\n                  localStream.close();\n                  if (isPublished) {\n                    await client.unpublish(localStream);\n                  }\n                  setIsPublished(false);\n                  await client.leave();\n                  setIsJoined(false);\n                  setClient(null);\n                  toast(`leave channel ${channel}`);\n                } catch (err) {\n                  console.error(err);\n                  errToast(err);\n                }\n              }}\n              publish={async () => {\n                if (!localStream || !client) return;\n                try {\n                  await client.publish(localStream);\n                  setIsPublished(true);\n                  toast(`stream published ${localStream.getId()}`);\n                } catch (err) {\n                  console.error(err);\n                  errToast(err);\n                }\n              }}\n              unpublish={async () => {\n                if (!localStream || !client) return;\n                await client.unpublish(localStream);\n                setIsPublished(false);\n                toast(`stream unpublished ${localStream.getId()}`);\n              }}\n              updateSettings={updateSettings}\n            />\n            <AdvancedSettingsForm\n              className=\"advanced-settings\"\n              uid={uid}\n              camera={camera}\n              cameraOptions={cameras}\n              microphone={microphone}\n              microphoneOptions={microphones}\n              cameraResolution={cameraResolution}\n              mode={mode}\n              codec={codec}\n              updateSettings={updateSettings}\n            />\n          </Col>\n          <Col flex={1}>\n            {localStream && (\n              <StreamPlayer stream={localStream} fit=\"contain\" label=\"local\" />\n            )}\n          </Col>\n        </Row>\n      </Content>\n      <Toast\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        draggable\n        pauseOnHover\n      />\n    </Page>\n  );\n};\n\nexport default App;\n","import { useEffect } from 'react';\nimport { Stream } from 'libs/agora-rtc-sdk';\n\nexport default (\n  stream: Stream | null,\n  { camera, microphone }: { microphone?: string; camera?: string },\n) => {\n  useEffect(() => {\n    if (stream === null) return;\n    if (microphone) {\n      stream.switchDevice(\n        'audio',\n        microphone,\n        () => console.log('success'),\n        (e) => console.error(e),\n      );\n    }\n    if (camera) {\n      stream.switchDevice(\n        'video',\n        camera,\n        () => console.log('success'),\n        (e) => console.error(e),\n      );\n    }\n  }, [camera, microphone]);\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\n\nexport default createGlobalStyle`\nhtml {\n  font-size: 16px;\n  background-color: ${Color.white};\n}\nbody {\n  color: #484848;\n  font-size: 1rem;\n  line-height: 1.5;\n  font-weight: 400;\n}\n* {\n  box-sizing: border-box;\n}\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/app';\nimport { ThemeProvider } from 'styled-components';\nimport colors from 'styles/colors';\nimport { MediaBreakpoint } from 'styles/breakpoints';\nimport GlobalStyle from 'components/global-style';\nimport { Normalize } from 'styled-normalize';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nReactDOM.render(\n  <ThemeProvider theme={{ colors, MediaBreakpoint }}>\n    <Normalize />\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}