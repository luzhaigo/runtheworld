{"version":3,"sources":["styles/colors.ts","styles/helpers/color.ts","components/input/index.tsx","components/button/index.tsx","components/settings-form/index.tsx","enums/settings.ts","components/dropdown-select/index.tsx","components/radio-button/index.tsx","components/advanced-settings-form/index.tsx","libs/agora-rtc-sdk.ts","libs/react-toastify.ts","components/player/index.tsx","hooks/use-user-media.ts","utils/transform-media-device-info-to-option.ts","components/app/index.tsx","hooks/use-switch-device.ts","styles/breakpoints.ts","components/global-style/index.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","primary","white","black","disabled","charcoal","silver","timberwolf","colorFn","color","props","theme","Color","Object","keys","reduce","acc","name","Input","styled","input","Btn","button","css","Icon","loading","rest","undefined","Button","children","innerRef","ref","icon","faSpinner","spin","Mode","Codec","Resolution","Card","div","noop","Settings","appId","channel","token","isJoined","isPublished","updateSettings","join","leave","publish","unpublish","onChange","e","target","value","htmlFor","placeholder","id","aria-label","className","onClick","StyledSelect","Select","FontAwesomeIcon","DropdownSelect","options","selectedOption","clearOnBlur","searchable","values","dropdownHandleRenderer","state","dropdown","faCaretUp","faCaretDown","InlineBlock","RadioButton","label","checked","type","cameraResolutionOptions","DEFAULT","_480P","_720P","_1080P","uid","camera","mode","codec","cameraOptions","microphone","microphoneOptions","cameraResolution","onChangeSelect","length","find","option","RTC","LIVE","VP8","H264","enhancedAgoraRTC","enhanceAgoraRTC","AgoraRTC","errToast","mgs","originalToast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toast","Container","StreamPlayer","SP","$width","$height","Player","stream","width","height","test","useState","getAudioTrack","muted","isAudioMuted","audioMuted","setAudioMuted","getVideoTrack","isVideoMuted","videoMuted","setVideoMuted","unmuteAudio","muteAudio","faMicrophoneSlash","faMicrophone","unmuteVideo","muteVideo","faVideoSlash","faVideo","noTransform","d","tempClient","createClient","info","deviceId","kind","Page","Content","Row","BSRow","Toast","ToastContainer","initialSettings","App","settings","setSettings","setIsJoined","setIsPublished","client","setClient","localStream","setLocalStream","remoteStreams","setRemoteStreams","useEffect","removeRemoteStreamByUid","list","filter","s","getId","addLocalStream","event","addRemoteStreams","concat","remoteStreamSub","peerLeave","reason","removeRemoteStream","err","console","on","off","transform","cameras","setCameras","microphones","setMicrophones","onCameraChange","onRecordingDeviceChange","a","log","getCameras","message","getRecordingDevices","item","map","useUserMedia","transformMediaDeviceInfo2Option","switchDevice","stop","useSwitchDevice","updatedSettings","fluid","Col","md","offset","span","text","init","createStream","streamID","video","audio","screen","cameraId","microphoneId","isPlaying","close","newestOnTop","rtl","breakpoints","xs","sm","lg","xl","friction","MediaBreakpoint","up","breakpoint","vertical","Error","down","index","indexOf","between","breakpointMin","breakpointMax","minValue","maxValue","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4374cee.chunk.js","sourcesContent":["const colors = {\n  primary: '#2020e5',\n  white: '#FFFFFF',\n  black: '#000000',\n  disabled: '#c6cbd4',\n  'dim-gray': '#6b6b6b',\n  'tiffany-blue': '#06b5b3',\n  charcoal: '#313d47',\n  silver: '#bdbdbd',\n  'dark-gray': '#a4a9ac',\n  timberwolf: '#d8d8d8',\n  'page-gray': '#fafafa',\n};\n\nexport default colors;\nexport type ColorsType = typeof colors;\n","import { StyledProps } from 'styled-components';\nimport { rgba as polishedRGBA } from 'polished';\nimport colors, { ColorsType } from 'styles/colors';\n\ntype ColorName = keyof ColorsType;\n\nconst colorFn = (color: ColorName) => <P>(props: StyledProps<P>): string =>\n  props.theme.colors[color];\n\nexport const rgba = (color: ColorName, alpha: number) => <P>(\n  props: StyledProps<P>,\n): string => {\n  const themeColor = colorFn(color)(props);\n  return polishedRGBA(themeColor, alpha);\n};\n\nexport const Color = Object.keys(colors).reduce((acc, name) => {\n  acc[name as ColorName] = colorFn(name as ColorName);\n  return acc;\n}, {} as { [P in keyof ColorsType]: <T>(props: StyledProps<T>) => ColorsType[P] });\n","import styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\n\nconst Input = styled.input`\n  width: 100%;\n  color: ${Color.charcoal};\n  border-radius: 4px;\n  border: 1px solid ${Color['dark-gray']};\n  padding: 14px 12px;\n  background: ${Color.white};\n  &::placeholder {\n    color: ${Color.silver};\n  }\n`;\n\nexport default Input;\n","import React, { FC, RefObject } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nexport type Props = RTW.Button<{\n  loading?: boolean;\n  primary?: boolean;\n  innerRef?: RefObject<HTMLButtonElement>;\n}>;\n\nconst Btn = styled.button<{ primary?: boolean }>`\n  &,\n  &:focus {\n    outline: none;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  padding: 0;\n  ${(props) =>\n    props.primary\n      ? css`\n          border: 1px solid ${Color.primary};\n          background-color: ${Color.primary};\n          color: ${Color.white};\n        `\n      : css`\n          border: 1px solid ${Color['dim-gray']};\n          background-color: ${Color.white};\n          color: ${Color['dim-gray']};\n        `}\n  font-weight: 500;\n  &:disabled {\n    cursor: not-allowed;\n    background-color: ${Color.disabled};\n    background-image: none;\n    border: 1px solid ${Color.disabled};\n    color: ${Color.white};\n  }\n`;\n\nconst Icon = styled(({ loading, ...rest }) => <FontAwesomeIcon {...rest} />)<{\n  loading?: boolean;\n}>`\n  && {\n    transition: width 0.5s, margin-right 0.5s;\n    width: ${(props) => (props.loading ? undefined : '0')};\n    margin-right: ${(props) => (props.loading ? '4px' : '0')};\n    ${(props) =>\n      props.loading === false &&\n      css`\n        path {\n          display: none;\n        }\n      `}\n  }\n`;\n\nconst Button: FC<Props> = ({\n  children,\n  loading = false,\n  disabled,\n  innerRef,\n  primary = false,\n  ...rest\n}) => {\n  return (\n    <Btn\n      {...rest}\n      ref={innerRef}\n      disabled={loading || disabled}\n      primary={primary}\n    >\n      <Icon icon={faSpinner} spin={loading} loading={loading} /> {children}\n    </Btn>\n  );\n};\n\nexport default Button;\n","import React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport Input from 'components/input';\nimport { BasicSettings } from 'types/setting';\nimport Btn from 'components/button';\n\ntype Props = BasicSettings & {\n  isJoined: boolean;\n  isPublished: boolean;\n  updateSettings: (updatedSettings: Partial<BasicSettings>) => void;\n  join?: () => void;\n  leave?: () => void;\n  publish?: () => void;\n  unpublish?: () => void;\n};\n\nconst Card = styled.div`\n  width: 100%;\n  padding: 24px;\n  background-color: ${Color.white};\n  border: 1px solid ${Color.timberwolf};\n  border-radius: 4px;\n  box-shadow: 0px 1px 1px 0px ${Color.timberwolf};\n  > label {\n    font-size: 0.75rem;\n    color: ${Color.silver};\n  }\n  > input {\n    margin: 0 0 8px;\n  }\n  .action-panel {\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\n\nconst Button = styled(Btn)`\n  padding: 12px 16px;\n  margin: 4px;\n  border-radius: 2px;\n  font-size: 0.85rem;\n`;\n\nconst noop = () => {};\n\nconst Settings: FC<RTW.Div<Props>> = ({\n  appId,\n  channel,\n  token,\n  isJoined,\n  isPublished,\n  updateSettings,\n  join = noop,\n  leave = noop,\n  publish = noop,\n  unpublish = noop,\n  ...rest\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    updateSettings({ [e.target.name]: e.target.value });\n  return (\n    <Card {...rest}>\n      <label htmlFor=\"appId\">App ID</label>\n      <Input\n        placeholder=\"App ID\"\n        value={appId}\n        name=\"appId\"\n        id=\"appId\"\n        aria-label=\"appId\"\n        onChange={onChange}\n      />\n      <label htmlFor=\"channel\">Channel</label>\n      <Input\n        placeholder=\"channel\"\n        value={channel}\n        name=\"channel\"\n        id=\"channel\"\n        aria-label=\"channel\"\n        onChange={onChange}\n      />\n      <label htmlFor=\"token\">Token</label>\n      <Input\n        placeholder=\"token\"\n        value={token}\n        name=\"token\"\n        id=\"token\"\n        aria-label=\"token\"\n        onChange={onChange}\n      />\n      <div className=\"action-panel\">\n        <Button disabled={isJoined} primary onClick={join}>\n          JOIN\n        </Button>\n        <Button disabled={!isJoined} primary onClick={leave}>\n          LEAVE\n        </Button>\n        <Button disabled={!isJoined || isPublished} primary onClick={publish}>\n          PUBLISH\n        </Button>\n        <Button disabled={!isPublished} primary onClick={unpublish}>\n          UNPUBLISH\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Settings;\n","export enum Mode {\n  LIVE = 'live',\n  RTC = 'rtc',\n}\n\nexport enum Codec {\n  H264 = 'h264',\n  VP8 = 'vp8',\n}\n\nexport enum Resolution {\n  DEFAULT = 'default',\n  _480P = '480p',\n  _720P = '720p',\n  _1080P = '1080p',\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Select, { SelectProps } from 'react-dropdown-select';\nimport { Color } from 'styles/helpers/color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\ntype Props<T> = Omit<SelectProps<T>, 'values'> & { selectedOption?: T };\n\nconst StyledSelect = styled(Select)`\n  && {\n    font-size: 16px;\n    color: ${Color.charcoal};\n    border-radius: 4px;\n    border: 1px solid ${Color['dark-gray']};\n    padding: 14px 12px;\n    background: ${Color.white};\n    &:hover {\n      border: 1px solid ${Color['dark-gray']};\n    }\n    &:focus,\n    &:focus-within {\n      box-shadow: none;\n      outline: none;\n      border: 1px solid ${Color['dark-gray']};\n    }\n    .react-dropdown-select-dropdown {\n      border-radius: 4px;\n      padding: 4px 0;\n    }\n    .react-dropdown-select-content span {\n      display: flex;\n      align-items: center;\n    }\n    .react-dropdown-select-content input {\n      color: ${Color.charcoal};\n      width: 0;\n      font-size: 16px;\n      &::placeholder {\n        color: ${Color.silver};\n      }\n    }\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: ${Color['dim-gray']};\n  font-size: 18px;\n`;\n\nconst DropdownSelect = <T extends string | object = {}>({\n  options,\n  selectedOption,\n  placeholder,\n  name,\n  onChange,\n  className,\n}: Props<T>): JSX.Element => {\n  return (\n    <StyledSelect\n      clearOnBlur\n      className={className}\n      searchable={false}\n      options={options}\n      values={selectedOption ? [selectedOption] : []}\n      placeholder={placeholder}\n      color=\"#2020e5\"\n      name={name}\n      dropdownHandleRenderer={({ state }) => {\n        return state.dropdown ? (\n          <Icon icon={faCaretUp} />\n        ) : (\n          <Icon icon={faCaretDown} />\n        );\n      }}\n      onChange={onChange as (value: (string | object)[]) => void}\n    />\n  );\n};\n\nexport default DropdownSelect;\n","import React, { FC, ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  label: string;\n  name: string;\n  value: string;\n  checked: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n};\n\nconst InlineBlock = styled.div`\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  * {\n    cursor: pointer;\n  }\n`;\n\nconst Input = styled.input`\n  margin-right: 8px;\n`;\n\nconst RadioButton: FC<Props> = ({\n  label,\n  value,\n  name,\n  checked,\n  onChange = () => {},\n  className,\n}) => {\n  return (\n    <InlineBlock className={className}>\n      <Input\n        value={value}\n        type=\"radio\"\n        name={name}\n        onChange={onChange}\n        checked={checked}\n        aria-label={label}\n      />\n      <label htmlFor={name}>{label}</label>\n    </InlineBlock>\n  );\n};\n\nexport default RadioButton;\n","import React, { FC, ChangeEvent } from 'react';\nimport { Mode, Codec, Resolution } from 'enums/settings';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport Input from 'components/input';\nimport Select from 'components/dropdown-select';\nimport RadioButton from 'components/radio-button';\nimport { AdvancedSettings } from 'types/setting';\n\nconst Card = styled.div`\n  width: 100%;\n  padding: 24px;\n  background-color: ${Color.white};\n  border: 1px solid ${Color.timberwolf};\n  border-radius: 4px;\n  box-shadow: 0px 1px 1px 0px ${Color.timberwolf};\n  > label {\n    font-size: 0.75rem;\n    color: ${Color.silver};\n  }\n  > input,\n  .select {\n    margin: 0 0 8px;\n  }\n  .radio-buttons {\n    margin-bottom: 16px;\n    > div {\n      margin-right: 8px;\n    }\n  }\n`;\n\ntype Option = {\n  value: string;\n  label: string;\n};\n\ntype Props = AdvancedSettings & {\n  cameraOptions: Option[];\n  microphoneOptions: Option[];\n  updateSettings: (updatedSettings: Partial<AdvancedSettings>) => void;\n};\n\nconst cameraResolutionOptions = [\n  {\n    label: Resolution.DEFAULT,\n    value: Resolution.DEFAULT,\n  },\n  {\n    label: Resolution._480P,\n    value: Resolution._480P,\n  },\n  {\n    label: Resolution._720P,\n    value: Resolution._720P,\n  },\n  {\n    label: Resolution._1080P,\n    value: Resolution._1080P,\n  },\n];\n\nconst Settings: FC<RTW.Div<Props>> = ({\n  uid,\n  camera,\n  mode,\n  codec,\n  cameraOptions,\n  microphone,\n  microphoneOptions,\n  cameraResolution,\n  updateSettings,\n  ...rest\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    updateSettings({ [e.target.name]: e.target.value });\n  const onChangeSelect = (name: string) => (options: Option[]) =>\n    updateSettings({ [name]: options[0].value });\n  return (\n    <Card {...rest}>\n      <h3>ADVANCED SETTINGS</h3>\n      <label htmlFor=\"uid\">UID</label>\n      <Input\n        value={uid}\n        name=\"uid\"\n        id=\"uid\"\n        aria-label=\"uid\"\n        onChange={onChange}\n        placeholder=\"uid\"\n      />\n      {cameraOptions?.length > 0 && (\n        <>\n          <label>CAMERA</label>\n          <Select\n            placeholder=\"camera\"\n            className=\"select\"\n            options={cameraOptions}\n            onChange={onChangeSelect('camera')}\n            selectedOption={cameraOptions.find(\n              (option) => option.value === camera,\n            )}\n          />\n        </>\n      )}\n      {microphoneOptions?.length > 0 && (\n        <>\n          <label>MICROPHONE</label>\n          <Select\n            placeholder=\"microphone\"\n            className=\"select\"\n            options={microphoneOptions}\n            onChange={onChangeSelect('microphone')}\n            selectedOption={microphoneOptions.find(\n              (option) => option.value === microphone,\n            )}\n          />\n        </>\n      )}\n      <label>CAMERA RESOLUTION</label>\n      <Select\n        placeholder=\"camera resolution\"\n        className=\"select\"\n        options={cameraResolutionOptions}\n        onChange={onChangeSelect('cameraResolution')}\n        selectedOption={cameraResolutionOptions.find(\n          (option) => option.value === cameraResolution,\n        )}\n      />\n      <label>Mode</label>\n      <div className=\"radio-buttons\">\n        <RadioButton\n          label=\"rtc\"\n          value={Mode.RTC}\n          name=\"mode\"\n          checked={Mode.RTC === mode}\n          onChange={onChange}\n        />\n        <RadioButton\n          label=\"live\"\n          value={Mode.LIVE}\n          name=\"mode\"\n          checked={Mode.LIVE === mode}\n          onChange={onChange}\n        />\n      </div>\n      <label>CODEC</label>\n      <div className=\"radio-buttons\">\n        <RadioButton\n          label=\"vp8\"\n          value={Codec.VP8}\n          name=\"codec\"\n          checked={Codec.VP8 === codec}\n          onChange={onChange}\n        />\n        <RadioButton\n          label=\"h264\"\n          value={Codec.H264}\n          name=\"codec\"\n          checked={Codec.H264 === codec}\n          onChange={onChange}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default Settings;\n","import AgoraRTC from 'agora-rtc-sdk';\nimport enhanceAgoraRTC from 'agoran-awe';\n\nconst enhancedAgoraRTC = enhanceAgoraRTC(AgoraRTC);\nexport type Stream = AgoraRTC.Stream;\nexport type Client = AgoraRTC.Client;\nexport default enhancedAgoraRTC;\nexport type IClientWithPromise = ReturnType<\n  typeof enhancedAgoraRTC.createClient\n>;\nexport type IStreamWithPromise = ReturnType<\n  typeof enhancedAgoraRTC.createStream\n>;\n","import { toast as originalToast, ToastOptions } from 'react-toastify';\n\nexport * from 'react-toastify';\nexport const errToast = (mgs: string, options?: ToastOptions) => {\n  originalToast.error(mgs, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    ...options,\n  });\n};\n\nexport const toast = (mgs: string, options?: ToastOptions) => {\n  originalToast(mgs, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    ...options,\n  });\n};\n","import React, { FC, useState } from 'react';\nimport styled from 'styled-components';\nimport SP from 'agora-stream-player';\nimport { Stream } from 'libs/agora-rtc-sdk';\nimport Btn from 'components/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMicrophone,\n  faMicrophoneSlash,\n  faVideo,\n  faVideoSlash,\n} from '@fortawesome/free-solid-svg-icons';\n\ntype Props = {\n  stream: Stream;\n  label?: string;\n  width?: string | number;\n  height?: string | number;\n};\n\nconst Container = styled.div`\n  display: inline-block;\n  .actions {\n    margin-top: 8px;\n    display: flex;\n    justify-content: center;\n    button:first-child {\n      margin-right: 8px;\n    }\n    button:last-child {\n      margin-left: 8px;\n    }\n  }\n`;\n\nconst StreamPlayer = styled(SP)<{ $width?: string; $height?: string }>`\n  width: ${(props) => props.$width};\n  height: ${(props) => props.$height};\n`;\n\nconst Button = styled(Btn)`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n`;\n\nconst isAudioMuted = (stream: Stream) =>\n  !!(stream.getAudioTrack() as any)?.muted;\nconst isVideoMuted = (stream: Stream) =>\n  !!(stream.getVideoTrack() as any)?.muted;\n\nconst Player: FC<RTW.Div<Props>> = ({\n  stream,\n  label,\n  width,\n  height,\n  ...rest\n}) => {\n  if (typeof width === 'number') {\n    width = `${width}`;\n  }\n  if (typeof height === 'number') {\n    height = `${height}`;\n  }\n  if (width && !/px$/.test(width)) {\n    width = `${width}px`;\n  }\n  if (height && !/px$/.test(height)) {\n    height = `${height}px`;\n  }\n  const [audioMuted, setAudioMuted] = useState(isAudioMuted(stream));\n  const [videoMuted, setVideoMuted] = useState(isVideoMuted(stream));\n  return (\n    <Container {...rest}>\n      <StreamPlayer\n        stream={stream}\n        label={label}\n        $width={width}\n        $height={height}\n      />\n      <div className=\"actions\">\n        <Button\n          onClick={() => {\n            if (audioMuted) {\n              stream.unmuteAudio();\n              setAudioMuted(false);\n            } else {\n              stream.muteAudio();\n              setAudioMuted(true);\n            }\n          }}\n        >\n          <FontAwesomeIcon\n            icon={audioMuted ? faMicrophoneSlash : faMicrophone}\n          />\n        </Button>\n        <Button\n          onClick={() => {\n            if (videoMuted) {\n              stream.unmuteVideo();\n              setVideoMuted(false);\n            } else {\n              stream.muteVideo();\n              setVideoMuted(true);\n            }\n          }}\n        >\n          <FontAwesomeIcon icon={videoMuted ? faVideoSlash : faVideo} />\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Player;\n","import { useState, useEffect } from 'react';\nimport AgoraRTC, { IClientWithPromise } from 'libs/agora-rtc-sdk';\nconst noTransform = (d: any) => d;\n\nconst tempClient = AgoraRTC.createClient({\n  mode: 'live',\n  codec: 'vp8',\n});\n\nexport default (\n  client: IClientWithPromise | null,\n  transform?: (d: MediaDeviceInfo) => any,\n) => {\n  client = client ?? tempClient;\n  transform = transform ?? noTransform;\n  const [cameras, setCameras] = useState<MediaDeviceInfo[]>([]);\n  const [microphones, setMicrophones] = useState<MediaDeviceInfo[]>([]);\n  useEffect(() => {\n    if (!client) return;\n    async function onCameraChange() {\n      console.log('onCameraChange');\n      try {\n        const cameras = await client?.getCameras();\n        if (cameras?.length) {\n          setCameras(cameras);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setCameras([]);\n      }\n    }\n    async function onRecordingDeviceChange() {\n      console.log('onRecordingDeviceChange');\n      try {\n        const microphones = await client?.getRecordingDevices();\n        if (microphones?.length) {\n          setMicrophones(microphones);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setMicrophones([]);\n      }\n    }\n    client.on('camera-changed', onCameraChange);\n    client.on('recording-device-changed', onRecordingDeviceChange);\n    onCameraChange();\n    onRecordingDeviceChange();\n    return () => {\n      client?.off('camera-changed', onCameraChange);\n      client?.off('recording-device-changed', onRecordingDeviceChange);\n    };\n  }, [client]);\n  return {\n    cameras: cameras.filter((item) => !!item.deviceId).map(transform),\n    microphones: microphones.filter((item) => !!item.deviceId).map(transform),\n  };\n};\n","export default (info: MediaDeviceInfo) => {\n  const { deviceId, kind, label } = info;\n  return {\n    kind,\n    label,\n    value: deviceId,\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Color } from 'styles/helpers/color';\nimport SettingsForm from 'components/settings-form';\nimport AdvancedSettingsForm from 'components/advanced-settings-form';\nimport { Mode, Codec, Resolution } from 'enums/settings';\nimport { Settings } from 'types/setting';\nimport AgoraRTC, { IClientWithPromise, Stream } from 'libs/agora-rtc-sdk';\nimport { ToastContainer, errToast, toast } from 'libs/react-toastify';\nimport Player from 'components/player';\nimport useUserMedia from 'hooks/use-user-media';\nimport transformMediaDeviceInfo2Option from 'utils/transform-media-device-info-to-option';\nimport useSwitchDevice from 'hooks/use-switch-device';\nimport { Container, Row as BSRow, Col } from 'react-bootstrap';\n\nconst Page = styled.div`\n  height: 100%;\n  background: ${Color['page-gray']};\n`;\n\nconst Content = styled.div`\n  max-width: 1280px;\n  margin: auto;\n  padding-bottom: 36px;\n  .advanced-settings {\n    margin-top: 4px;\n  }\n  .local-player {\n    margin-top: 16px;\n  }\n`;\n\nconst Row = styled(BSRow)`\n  padding-top: 36px;\n`;\n\nconst Toast = styled(ToastContainer)`\n  z-index: 20000;\n  top: 30px;\n`;\n\nconst initialSettings = {\n  appId: '3c8f8535f5ca4d23a2c6d550745c1141',\n  channel: 'test',\n  token:\n    '00634e5cdd2dd0547368b549ddbc83f0f8bIACkfhrbesmd9668aeBOyy6JcLyW+lLG9svVCfSZS/AtCAx+f9gAAAAAEACZqwdIDMftXwEAAQAMx+1f',\n  uid: '',\n  camera: '',\n  microphone: '',\n  cameraResolution: Resolution.DEFAULT,\n  mode: Mode.RTC,\n  codec: Codec.VP8,\n};\n\nconst App = () => {\n  const [settings, setSettings] = useState<Settings>(initialSettings);\n  const {\n    appId,\n    channel,\n    token,\n    uid,\n    camera,\n    microphone,\n    cameraResolution,\n    mode,\n    codec,\n  } = settings;\n  const [isJoined, setIsJoined] = useState(false);\n  const [isPublished, setIsPublished] = useState(false);\n  const [client, setClient] = useState<IClientWithPromise | null>(null);\n  const [localStream, setLocalStream] = useState<Stream | null>(null);\n  const [remoteStreams, setRemoteStreams] = useState<Stream[]>([]);\n  useEffect(() => {\n    if (!client) {\n      setLocalStream(null);\n      setRemoteStreams([]);\n      return;\n    }\n    function removeRemoteStreamByUid(uid: string | number) {\n      setRemoteStreams((list) =>\n        list.filter((s) => `${s.getId()}` !== `${uid}`),\n      );\n    }\n    function addLocalStream(event: { stream: Stream }) {\n      const { stream } = event;\n      toast('local stream published');\n      setLocalStream(stream);\n    }\n    function addRemoteStreams(event: { stream: Stream }) {\n      const { stream } = event;\n      toast(`new stream added ${stream.getId()}`);\n      setRemoteStreams((list) => list?.concat(stream));\n    }\n    function remoteStreamSub(event: { stream: Stream }) {\n      const { stream } = event;\n      toast(`new stream subscribed ${stream.getId()}`);\n    }\n    function peerLeave(event: { uid: string; reason: string }) {\n      const { uid, reason } = event;\n      toast(`user ${uid} leave because of ${reason}`);\n      removeRemoteStreamByUid(uid);\n    }\n    function removeRemoteStream(event: { stream: Stream }) {\n      const { stream } = event;\n      const uid = stream.getId();\n      toast(`remote stream was removed ${uid}`);\n      removeRemoteStreamByUid(uid);\n    }\n    function error(err: { type: 'error'; reason: any }) {\n      console.error(err);\n      errToast(err.reason);\n    }\n    client.on('stream-published', addLocalStream);\n    client.on('stream-added', addRemoteStreams);\n    client.on('stream-subscribed', remoteStreamSub);\n    client.on('peer-leave', peerLeave);\n    client.on('stream-removed', removeRemoteStream);\n    client.on('error', error);\n    return () => {\n      client.off('stream-published', addLocalStream);\n      client.off('stream-added', addRemoteStreams);\n      client.off('stream-subscribed', remoteStreamSub);\n      client.off('peer-leave', peerLeave);\n      client.off('stream-removed', removeRemoteStream);\n      client.off('error', error);\n    };\n  }, [client]);\n  const { cameras, microphones } = useUserMedia(\n    client,\n    transformMediaDeviceInfo2Option,\n  );\n  useEffect(() => {\n    if (!camera && cameras.length > 0) {\n      updateSettings({ camera: cameras[0].value });\n    }\n    if (!microphone && microphones.length > 0) {\n      updateSettings({ microphone: 'default' });\n    }\n  }, [cameras, microphones]);\n  useSwitchDevice(localStream, { microphone, camera });\n  const updateSettings = (updatedSettings: Partial<Settings>) => {\n    setSettings({ ...settings, ...updatedSettings });\n  };\n  return (\n    <Page>\n      <Content>\n        <Container fluid>\n          <Row>\n            <Col md={{ offset: 1, span: 10 }}>\n              <BSRow>\n                <Col md={6}>\n                  <SettingsForm\n                    appId={appId}\n                    channel={channel}\n                    token={token}\n                    isJoined={isJoined}\n                    isPublished={isPublished}\n                    join={async () => {\n                      if (!appId || !channel || !token) {\n                        return errToast(\n                          `please fill ${\n                            [\n                              { text: 'AppId', value: appId },\n                              { text: 'Channel', value: channel },\n                              { text: 'Token', value: token },\n                            ].find((item) => !item.value)?.text\n                          }`,\n                        );\n                      }\n                      const client = AgoraRTC.createClient({ mode, codec });\n                      if (!appId || !channel || !token) return;\n                      setClient(client);\n                      try {\n                        await client.init(appId);\n                        await client.join(\n                          token,\n                          channel,\n                          uid === '' ? null : uid,\n                        );\n                        const stream = AgoraRTC.createStream({\n                          streamID: uid || `local-user`,\n                          video: true,\n                          audio: true,\n                          screen: false,\n                          cameraId: camera || undefined,\n                          microphoneId: microphone || undefined,\n                        });\n                        setIsJoined(true);\n                        await stream.init();\n                        await client.publish(stream);\n                        setIsPublished(true);\n                        toast(`join channel ${channel}`);\n                      } catch (err) {\n                        console.error(err);\n                        errToast(err);\n                        setClient(null);\n                      }\n                    }}\n                    leave={async () => {\n                      if (!localStream || !client) return;\n                      try {\n                        if (localStream.isPlaying()) {\n                          localStream.stop();\n                        }\n                        localStream.close();\n                        if (isPublished) {\n                          await client.unpublish(localStream);\n                        }\n                        setIsPublished(false);\n                        await client.leave();\n                        setIsJoined(false);\n                        setClient(null);\n                        toast(`leave channel ${channel}`);\n                      } catch (err) {\n                        console.error(err);\n                        errToast(err);\n                      }\n                    }}\n                    publish={async () => {\n                      if (!localStream || !client) return;\n                      try {\n                        await client.publish(localStream);\n                        setIsPublished(true);\n                        toast(`stream published ${localStream.getId()}`);\n                      } catch (err) {\n                        console.error(err);\n                        errToast(err);\n                      }\n                    }}\n                    unpublish={async () => {\n                      if (!localStream || !client) return;\n                      await client.unpublish(localStream);\n                      setIsPublished(false);\n                      toast(`stream unpublished ${localStream.getId()}`);\n                    }}\n                    updateSettings={updateSettings}\n                  />\n                  <AdvancedSettingsForm\n                    className=\"advanced-settings\"\n                    uid={uid}\n                    camera={camera}\n                    cameraOptions={cameras}\n                    microphone={microphone}\n                    microphoneOptions={microphones}\n                    cameraResolution={cameraResolution}\n                    mode={mode}\n                    codec={codec}\n                    updateSettings={updateSettings}\n                  />\n                </Col>\n                <Col md={6}>\n                  {localStream && (\n                    <Player\n                      className=\"local-player\"\n                      stream={localStream}\n                      label={localStream.getId() as string}\n                      width=\"440\"\n                      height=\"330\"\n                    />\n                  )}\n                  {remoteStreams.map((stream) => (\n                    <Player\n                      key={stream.getId()}\n                      stream={stream}\n                      label={stream.getId() as string}\n                    />\n                  ))}\n                </Col>\n              </BSRow>\n            </Col>\n          </Row>\n        </Container>\n      </Content>\n      <Toast\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        draggable\n        pauseOnHover\n      />\n    </Page>\n  );\n};\n\nexport default App;\n","import { useEffect } from 'react';\nimport { Stream } from 'libs/agora-rtc-sdk';\n\nexport default (\n  stream: Stream | null,\n  { camera, microphone }: { microphone?: string; camera?: string },\n) => {\n  useEffect(() => {\n    if (stream === null) return;\n    if (microphone) {\n      stream.switchDevice(\n        'audio',\n        microphone,\n        () => console.log('microphone switch success'),\n        (e) => console.error(e),\n      );\n    }\n    if (camera) {\n      (stream.getVideoTrack() as any)?.stop();\n      stream.switchDevice(\n        'video',\n        camera,\n        () => console.log('camera switch success'),\n        (e) => console.error(e),\n      );\n    }\n  }, [camera, microphone]);\n};\n","const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport type Breakpoint = keyof typeof breakpoints;\n\nexport default breakpoints;\n\nconst friction = 0.02;\n\nexport const MediaBreakpoint = {\n  up: (breakpoint: Breakpoint, vertical = false) => {\n    const value = breakpoints[breakpoint];\n    if (value === undefined) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    return `@media (min-${vertical ? 'height' : 'width'}: ${value}px)`;\n  },\n  down: (breakpoint: Breakpoint, vertical = false) => {\n    const keys = Object.keys(breakpoints);\n    const index = keys.indexOf(breakpoint);\n    if (index === -1) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    const value = breakpoints[keys[index + 1] as Breakpoint];\n    if (value === undefined) {\n      throw new Error(`invalid breakpint: ${breakpoint}`);\n    }\n    return `@media (max-${vertical ? 'height' : 'width'}: ${\n      value - friction\n    }px)`;\n  },\n  between: (\n    breakpointMin: Breakpoint,\n    breakpointMax: Breakpoint,\n    vertical = false,\n  ) => {\n    const minValue = breakpoints[breakpointMin];\n    const maxValue = breakpoints[breakpointMax];\n    if (minValue === undefined || maxValue === undefined) {\n      throw new Error(\n        `invalid breakpint: ${breakpointMin} and ${breakpointMax}`,\n      );\n    }\n    return `@media (max-${vertical ? 'height' : 'width'}: ${\n      maxValue - friction\n    }px) and (min-${vertical ? 'height' : 'width'}: ${minValue}px)`;\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { Color } from 'styles/helpers/color';\n\nexport default createGlobalStyle`\nhtml {\n  font-size: 16px;\n  background-color: ${Color.white};\n}\nbody {\n  color: #484848;\n  font-size: 1rem;\n  line-height: 1.5;\n  font-weight: 400;\n}\n* {\n  box-sizing: border-box;\n}\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/app';\nimport { ThemeProvider } from 'styled-components';\nimport colors from 'styles/colors';\nimport { MediaBreakpoint } from 'styles/breakpoints';\nimport GlobalStyle from 'components/global-style';\nimport { Normalize } from 'styled-normalize';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/scss/bootstrap-grid.scss';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nReactDOM.render(\n  <ThemeProvider theme={{ colors, MediaBreakpoint }}>\n    <Normalize />\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}